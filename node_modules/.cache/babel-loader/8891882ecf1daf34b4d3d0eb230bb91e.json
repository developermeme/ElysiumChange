{"ast":null,"code":"import { pattern } from \"../../constant/RegEx\";\nimport { ERROR } from \"../../constant/Variables\";\nexport const validateName = (name, key) => {\n  let formIsValid = true;\n  let error = \"\";\n  const Name = key === \"name\" ? \"name\" : key === \"fname\" ? \"first name\" : \"last name\";\n\n  if (!name) {\n    formIsValid = false;\n    error = ` ${ERROR.EMPTY_NAME} ${Name}.`;\n  }\n\n  if (typeof name !== \"undefined\") {\n    if (!name.match(/^[a-zA-Z ]*$/)) {\n      formIsValid = false;\n      error = ERROR.INVALID_NAME;\n    }\n  }\n\n  return {\n    formIsValid,\n    error\n  };\n};\nexport const validateEmailId = emailID => {\n  let formIsValid = true;\n  let error = \"\";\n\n  if (!emailID) {\n    formIsValid = false;\n    error = ERROR.EMPTY_EMAILID;\n  }\n\n  if (emailID !== \"\") {\n    if (!pattern.test(emailID)) {\n      formIsValid = false;\n      error = ERROR.INVALID_EMAILID;\n    }\n  }\n\n  return {\n    formIsValid,\n    error\n  };\n};\nexport const validateMobileNumber = mobileNumber => {\n  let formIsValid = true;\n  let error = \"\";\n\n  if (!mobileNumber) {\n    formIsValid = false;\n    error = ERROR.EMPTY_MOBILENO;\n  }\n\n  if (mobileNumber !== \"\") {\n    if (!mobileNumber.match(/^[0-9]{10}$/)) {\n      formIsValid = false;\n      error = ERROR.INVALID_MOBILENO;\n    }\n  }\n\n  return {\n    formIsValid,\n    error\n  };\n};\nexport const validatePassword = password => {\n  let formIsValid = true;\n  let error = \"\";\n\n  if (!password) {\n    formIsValid = false;\n    error = ERROR.EMPTY_PASSWORD;\n  }\n\n  if ((password === null || password === void 0 ? void 0 : password.length) < 6) {\n    formIsValid = false;\n    error = \"Your Password should contain 6 characters\";\n  } //  if (\n  //   !password.match(\n  //     /^.*(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%&]).*$/\n  //   )\n  // ) {\n  //   formIsValid = false;\n  //   error = ERROR.INVALID_PASSWORD;\n  // }\n\n\n  return {\n    formIsValid,\n    error\n  };\n};\nexport const getToast = (successMsg, apiError) => {\n  let classname;\n  let message;\n\n  if (successMsg) {\n    classname = \"alert--success\";\n    message = successMsg;\n  }\n\n  if (apiError) {\n    classname = \"alert--error\";\n    message = apiError;\n  }\n\n  return {\n    classname,\n    message\n  };\n};","map":{"version":3,"names":["pattern","ERROR","validateName","name","key","formIsValid","error","Name","EMPTY_NAME","match","INVALID_NAME","validateEmailId","emailID","EMPTY_EMAILID","test","INVALID_EMAILID","validateMobileNumber","mobileNumber","EMPTY_MOBILENO","INVALID_MOBILENO","validatePassword","password","EMPTY_PASSWORD","length","getToast","successMsg","apiError","classname","message"],"sources":["C:/Users/arunm/MeMeglobalsites/Elysium/New folder/ElysiumChange/src/components/UserAccount/Script.tsx"],"sourcesContent":["import { pattern } from \"../../constant/RegEx\";\r\nimport { ERROR } from \"../../constant/Variables\";\r\n\r\nexport const validateName = (name: string, key: string) => {\r\n  let formIsValid: boolean = true;\r\n  let error: string = \"\";\r\n\r\n  const Name =\r\n    key === \"name\" ? \"name\" : key === \"fname\" ? \"first name\" : \"last name\";\r\n\r\n  if (!name) {\r\n    formIsValid = false;\r\n    error = ` ${ERROR.EMPTY_NAME} ${Name}.`;\r\n  }\r\n  if (typeof name !== \"undefined\") {\r\n    if (!name.match(/^[a-zA-Z ]*$/)) {\r\n      formIsValid = false;\r\n      error = ERROR.INVALID_NAME;\r\n    }\r\n  }\r\n  return { formIsValid, error };\r\n};\r\n\r\nexport const validateEmailId = (emailID: string) => {\r\n  let formIsValid: boolean = true;\r\n  let error: string = \"\";\r\n\r\n  if (!emailID) {\r\n    formIsValid = false;\r\n    error = ERROR.EMPTY_EMAILID;\r\n  }\r\n\r\n  if (emailID !== \"\") {\r\n    if (!pattern.test(emailID)) {\r\n      formIsValid = false;\r\n      error = ERROR.INVALID_EMAILID;\r\n    }\r\n  }\r\n  return { formIsValid, error };\r\n};\r\n\r\nexport const validateMobileNumber = (mobileNumber: string) => {\r\n  let formIsValid: boolean = true;\r\n  let error: string = \"\";\r\n\r\n  if (!mobileNumber) {\r\n    formIsValid = false;\r\n    error = ERROR.EMPTY_MOBILENO;\r\n  }\r\n\r\n  if (mobileNumber !== \"\") {\r\n    if (!mobileNumber.match(/^[0-9]{10}$/)) {\r\n      formIsValid = false;\r\n      error = ERROR.INVALID_MOBILENO;\r\n    }\r\n  }\r\n  return { formIsValid, error };\r\n};\r\n\r\nexport const validatePassword = (password: string) => {\r\n  let formIsValid: boolean = true;\r\n  let error: string = \"\";\r\n\r\n  if (!password) {\r\n    formIsValid = false;\r\n    error = ERROR.EMPTY_PASSWORD;\r\n  }\r\n\r\n  if (password?.length < 6) {\r\n    formIsValid = false;\r\n    error = \"Your Password should contain 6 characters\";\r\n  }\r\n\r\n  //  if (\r\n  //   !password.match(\r\n  //     /^.*(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%&]).*$/\r\n  //   )\r\n  // ) {\r\n  //   formIsValid = false;\r\n  //   error = ERROR.INVALID_PASSWORD;\r\n  // }\r\n\r\n  return { formIsValid, error };\r\n};\r\n\r\nexport const getToast = (successMsg?: string, apiError?: string) => {\r\n  let classname;\r\n  let message;\r\n  if (successMsg) {\r\n    classname = \"alert--success\";\r\n    message = successMsg;\r\n  }\r\n  if (apiError) {\r\n    classname = \"alert--error\";\r\n    message = apiError;\r\n  }\r\n  return { classname, message };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}