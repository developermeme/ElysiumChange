{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { validateEmailId } from \"../components/UserAccount/Script\";\nimport { ERROR404, ERROR500 } from \"../constant/routes\";\nimport { useValidationInfoContext } from \"../react-context/ValidationContext\";\nimport { UserServices as UserAPI } from \"../utils/API\";\nexport const useForgotPassward = () => {\n  _s();\n\n  const forgotPwdState = {\n    email: \"\"\n  };\n  const [registeredEmail, setRegisteredEmail] = React.useState(forgotPwdState);\n  const [emailError, setEmailError] = React.useState(\"\");\n  const {\n    handleForgotPasswordOnSubmit\n  } = useValidationInfoContext();\n\n  const handleEmailInputChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setRegisteredEmail({ ...registeredEmail,\n      [name]: value\n    });\n  };\n\n  const handeValidate = () => {\n    let fields = registeredEmail;\n    let formIsValid = true;\n    let userNameError = \"\";\n    const isValidEmailId = validateEmailId(fields.email);\n    formIsValid = isValidEmailId.formIsValid;\n    userNameError = isValidEmailId.error;\n    setEmailError(userNameError);\n    return formIsValid;\n  };\n\n  React.useEffect(() => {\n    if (emailError === \"\") {\n      return;\n    }\n\n    const timer = setTimeout(() => {\n      setEmailError(\"\");\n    }, 5000);\n    return () => clearTimeout(timer);\n  }, [emailError]);\n  const email = {\n    email: registeredEmail.email\n  };\n\n  const ResendOTP = () => {\n    UserAPI.forgotpwd(email).then(res => {\n      if (res.status === 200 && res.data.toString().length === 4) {\n        localStorage.setItem(\"login-email\", registeredEmail.email);\n        handleForgotPasswordOnSubmit();\n      }\n\n      if (res.status === 200 && res.data === \"User Not Available\") {\n        setEmailError(\"User Not Available\");\n      }\n    }).catch(error => {\n      if (error.response) {\n        switch (error.response.status) {\n          case 500:\n            {\n              window.location.href = ERROR500;\n              break;\n            }\n\n          case 404:\n            {\n              window.location.href = ERROR404;\n              break;\n            }\n\n          default:\n            window.location.href = ERROR500;\n        }\n      }\n    });\n  };\n\n  const handleForgotPasswordSubmit = e => {\n    e.preventDefault();\n\n    if (handeValidate()) {\n      ResendOTP();\n    }\n  };\n\n  return {\n    registeredEmail,\n    handleEmailInputChange,\n    handleForgotPasswordSubmit,\n    ResendOTP,\n    emailError\n  };\n};\n\n_s(useForgotPassward, \"VGmQonaqyKI24KEY8pUkmPdxHi0=\", false, function () {\n  return [useValidationInfoContext];\n});","map":{"version":3,"names":["React","validateEmailId","ERROR404","ERROR500","useValidationInfoContext","UserServices","UserAPI","useForgotPassward","forgotPwdState","email","registeredEmail","setRegisteredEmail","useState","emailError","setEmailError","handleForgotPasswordOnSubmit","handleEmailInputChange","e","name","target","value","handeValidate","fields","formIsValid","userNameError","isValidEmailId","error","useEffect","timer","setTimeout","clearTimeout","ResendOTP","forgotpwd","then","res","status","data","toString","length","localStorage","setItem","catch","response","window","location","href","handleForgotPasswordSubmit","preventDefault"],"sources":["C:/Users/arunm/MeMeglobalsites/Elysium/New folder/ElysiumChange/src/hook/useForgotPassward.hook.ts"],"sourcesContent":["import React from \"react\";\r\nimport { validateEmailId } from \"../components/UserAccount/Script\";\r\nimport { ERROR404, ERROR500 } from \"../constant/routes\";\r\nimport { ForgotPwd, onChange, onClick } from \"../constant/Types\";\r\nimport { useValidationInfoContext } from \"../react-context/ValidationContext\";\r\nimport { UserServices as UserAPI } from \"../utils/API\";\r\n\r\nexport const useForgotPassward = () => {\r\n  const forgotPwdState = {\r\n    email: \"\",\r\n  };\r\n\r\n  const [registeredEmail, setRegisteredEmail] =\r\n    React.useState<ForgotPwd>(forgotPwdState);\r\n  const [emailError, setEmailError] = React.useState<string>(\"\");\r\n\r\n  const { handleForgotPasswordOnSubmit } = useValidationInfoContext();\r\n\r\n  const handleEmailInputChange = (e: onChange) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setRegisteredEmail({ ...registeredEmail, [name]: value });\r\n  };\r\n\r\n  const handeValidate = () => {\r\n    let fields = registeredEmail;\r\n    let formIsValid = true;\r\n    let userNameError = \"\";\r\n\r\n    const isValidEmailId = validateEmailId(fields.email);\r\n    formIsValid = isValidEmailId.formIsValid;\r\n    userNameError = isValidEmailId.error;\r\n    setEmailError(userNameError);\r\n    return formIsValid;\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (emailError === \"\") {\r\n      return;\r\n    }\r\n    const timer = setTimeout(() => {\r\n      setEmailError(\"\");\r\n    }, 5000);\r\n    return () => clearTimeout(timer);\r\n  }, [emailError]);\r\n\r\n  const email = { email: registeredEmail.email };\r\n\r\n  const ResendOTP = () => {\r\n    UserAPI.forgotpwd(email)\r\n      .then((res: any) => {\r\n        if (res.status === 200 && res.data.toString().length === 4) {\r\n          localStorage.setItem(\"login-email\", registeredEmail.email);\r\n          handleForgotPasswordOnSubmit();\r\n        }\r\n        if (res.status === 200 && res.data === \"User Not Available\") {\r\n          setEmailError(\"User Not Available\");\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        if (error.response) {\r\n          switch (error.response.status) {\r\n            case 500: {\r\n              window.location.href = ERROR500;\r\n              break;\r\n            }\r\n            case 404: {\r\n              window.location.href = ERROR404;\r\n              break;\r\n            }\r\n            default:\r\n              window.location.href = ERROR500;\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleForgotPasswordSubmit = (e: onClick) => {\r\n    e.preventDefault();\r\n\r\n    if (handeValidate()) {\r\n      ResendOTP();\r\n    }\r\n  };\r\n  return {\r\n    registeredEmail,\r\n    handleEmailInputChange,\r\n    handleForgotPasswordSubmit,\r\n    ResendOTP,\r\n    emailError,\r\n  };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}