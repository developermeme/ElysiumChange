{"ast":null,"code":"export const Reducer = {\n  setProfileDetails: (state, action) => {\n    let copystate = { ...state\n    };\n    copystate.profileDetails.Profile = action.payload;\n    state = copystate;\n  },\n  setUpdateDetails: (state, action) => {\n    let copystate = { ...state\n    };\n    copystate.profileDetails.isUpdatedProfile = action.payload;\n    state = copystate;\n  },\n  setReferral: (state, action) => {\n    state.subcription = action.payload;\n  },\n  setPlan: (state, action) => {\n    state.plans = action.payload;\n  },\n  setUpdateSubscription: (state, action) => {\n    state.isSubsUpdated = action.payload;\n  }\n};","map":{"version":3,"names":["Reducer","setProfileDetails","state","action","copystate","profileDetails","Profile","payload","setUpdateDetails","isUpdatedProfile","setReferral","subcription","setPlan","plans","setUpdateSubscription","isSubsUpdated"],"sources":["C:/Users/arunm/MeMeglobalsites/Elysium/New folder/ElysiumChange/src/components/stateContainers/Profile/Reducer.ts"],"sourcesContent":["import { PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { IProfile } from \"../../../model/IProductType\";\r\nimport { IInitialState, IPlans, ISubcription } from \"./Types\";\r\n\r\nexport const Reducer = {\r\n  setProfileDetails: (\r\n    state: IInitialState,\r\n    action: PayloadAction<IProfile>\r\n  ): void => {\r\n    let copystate = { ...state };\r\n    copystate.profileDetails.Profile = action.payload;\r\n    state = copystate;\r\n  },\r\n  setUpdateDetails: (\r\n    state: IInitialState,\r\n    action: PayloadAction<boolean>\r\n  ): void => {\r\n    let copystate = { ...state };\r\n    copystate.profileDetails.isUpdatedProfile = action.payload;\r\n    state = copystate;\r\n  },\r\n  setReferral: (\r\n    state: IInitialState,\r\n    action: PayloadAction<ISubcription>\r\n  ): void => {\r\n    state.subcription = action.payload;\r\n  },\r\n\r\n  setPlan: (state: IInitialState, action: PayloadAction<IPlans[]>): void => {\r\n    state.plans = action.payload;\r\n  },\r\n  setUpdateSubscription: (\r\n    state: IInitialState,\r\n    action: PayloadAction<boolean>\r\n  ): void => {\r\n    state.isSubsUpdated = action.payload;\r\n  },\r\n};\r\n"],"mappings":"AAIA,OAAO,MAAMA,OAAO,GAAG;EACrBC,iBAAiB,EAAE,CACjBC,KADiB,EAEjBC,MAFiB,KAGR;IACT,IAAIC,SAAS,GAAG,EAAE,GAAGF;IAAL,CAAhB;IACAE,SAAS,CAACC,cAAV,CAAyBC,OAAzB,GAAmCH,MAAM,CAACI,OAA1C;IACAL,KAAK,GAAGE,SAAR;EACD,CARoB;EASrBI,gBAAgB,EAAE,CAChBN,KADgB,EAEhBC,MAFgB,KAGP;IACT,IAAIC,SAAS,GAAG,EAAE,GAAGF;IAAL,CAAhB;IACAE,SAAS,CAACC,cAAV,CAAyBI,gBAAzB,GAA4CN,MAAM,CAACI,OAAnD;IACAL,KAAK,GAAGE,SAAR;EACD,CAhBoB;EAiBrBM,WAAW,EAAE,CACXR,KADW,EAEXC,MAFW,KAGF;IACTD,KAAK,CAACS,WAAN,GAAoBR,MAAM,CAACI,OAA3B;EACD,CAtBoB;EAwBrBK,OAAO,EAAE,CAACV,KAAD,EAAuBC,MAAvB,KAAiE;IACxED,KAAK,CAACW,KAAN,GAAcV,MAAM,CAACI,OAArB;EACD,CA1BoB;EA2BrBO,qBAAqB,EAAE,CACrBZ,KADqB,EAErBC,MAFqB,KAGZ;IACTD,KAAK,CAACa,aAAN,GAAsBZ,MAAM,CAACI,OAA7B;EACD;AAhCoB,CAAhB"},"metadata":{},"sourceType":"module"}