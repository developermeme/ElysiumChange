{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nexport const useTimer = endDate => {\n  _s();\n\n  const [timeLeft, setTimeLeft] = useState();\n  const [over, setOver] = useState(\"\");\n\n  const calculateTimeLeft = () => {\n    var deadline = new Date(endDate).getTime();\n    var now = new Date().getTime();\n    var difference = deadline - now;\n    let timeLeft = {};\n\n    if (difference > 0) {\n      timeLeft = {\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)).toString().padStart(2, \"0\"),\n        hours: Math.floor(difference / (1000 * 60 * 60) % 24).toString().padStart(2, \"0\"),\n        minutes: Math.floor(difference / 1000 / 60 % 60).toString().padStart(2, \"0\"),\n        seconds: Math.floor(difference / 1000 % 60).toString().padStart(2, \"0\")\n      };\n      setTimeLeft(timeLeft);\n    }\n\n    if (difference < 0) {\n      setOver(\"TimesUp !!!\");\n    }\n  };\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      calculateTimeLeft();\n    }, 1000);\n    return () => clearTimeout(timeout);\n  });\n  return {\n    timeLeft,\n    over\n  };\n};\n\n_s(useTimer, \"I7lRt6aEWHRJgn3iPrqbrm7Pcpo=\");","map":{"version":3,"names":["useEffect","useState","useTimer","endDate","timeLeft","setTimeLeft","over","setOver","calculateTimeLeft","deadline","Date","getTime","now","difference","days","Math","floor","toString","padStart","hours","minutes","seconds","timeout","setTimeout","clearTimeout"],"sources":["C:/Users/arunm/MeMeglobalsites/Elysium/New folder/ElysiumChange/src/components/common/Timer/useTimer.hook.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport const useTimer = (endDate: string) => {\r\n  const [timeLeft, setTimeLeft] = useState<any>();\r\n  const [over, setOver] = useState<string>(\"\");\r\n\r\n  const calculateTimeLeft = () => {\r\n    var deadline = new Date(endDate).getTime();\r\n    var now = new Date().getTime();\r\n    var difference = deadline - now;\r\n\r\n    let timeLeft = {};\r\n\r\n    if (difference > 0) {\r\n      timeLeft = {\r\n        days: Math.floor(difference / (1000 * 60 * 60 * 24))\r\n          .toString()\r\n          .padStart(2, \"0\"),\r\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24)\r\n          .toString()\r\n          .padStart(2, \"0\"),\r\n        minutes: Math.floor((difference / 1000 / 60) % 60)\r\n          .toString()\r\n          .padStart(2, \"0\"),\r\n        seconds: Math.floor((difference / 1000) % 60)\r\n          .toString()\r\n          .padStart(2, \"0\"),\r\n      };\r\n      setTimeLeft(timeLeft);\r\n    }\r\n    if (difference < 0) {\r\n      setOver(\"TimesUp !!!\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      calculateTimeLeft();\r\n    }, 1000);\r\n    return () => clearTimeout(timeout);\r\n  });\r\n\r\n  return { timeLeft, over };\r\n};\r\n"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,MAAMC,QAAQ,GAAIC,OAAD,IAAqB;EAAA;;EAC3C,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,EAAxC;EACA,MAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAS,EAAT,CAAhC;;EAEA,MAAMO,iBAAiB,GAAG,MAAM;IAC9B,IAAIC,QAAQ,GAAG,IAAIC,IAAJ,CAASP,OAAT,EAAkBQ,OAAlB,EAAf;IACA,IAAIC,GAAG,GAAG,IAAIF,IAAJ,GAAWC,OAAX,EAAV;IACA,IAAIE,UAAU,GAAGJ,QAAQ,GAAGG,GAA5B;IAEA,IAAIR,QAAQ,GAAG,EAAf;;IAEA,IAAIS,UAAU,GAAG,CAAjB,EAAoB;MAClBT,QAAQ,GAAG;QACTU,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWH,UAAU,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAArB,EACHI,QADG,GAEHC,QAFG,CAEM,CAFN,EAES,GAFT,CADG;QAITC,KAAK,EAAEJ,IAAI,CAACC,KAAL,CAAYH,UAAU,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAX,GAAkC,EAA7C,EACJI,QADI,GAEJC,QAFI,CAEK,CAFL,EAEQ,GAFR,CAJE;QAOTE,OAAO,EAAEL,IAAI,CAACC,KAAL,CAAYH,UAAU,GAAG,IAAb,GAAoB,EAArB,GAA2B,EAAtC,EACNI,QADM,GAENC,QAFM,CAEG,CAFH,EAEM,GAFN,CAPA;QAUTG,OAAO,EAAEN,IAAI,CAACC,KAAL,CAAYH,UAAU,GAAG,IAAd,GAAsB,EAAjC,EACNI,QADM,GAENC,QAFM,CAEG,CAFH,EAEM,GAFN;MAVA,CAAX;MAcAb,WAAW,CAACD,QAAD,CAAX;IACD;;IACD,IAAIS,UAAU,GAAG,CAAjB,EAAoB;MAClBN,OAAO,CAAC,aAAD,CAAP;IACD;EACF,CA3BD;;EA6BAP,SAAS,CAAC,MAAM;IACd,MAAMsB,OAAO,GAAGC,UAAU,CAAC,MAAM;MAC/Bf,iBAAiB;IAClB,CAFyB,EAEvB,IAFuB,CAA1B;IAGA,OAAO,MAAMgB,YAAY,CAACF,OAAD,CAAzB;EACD,CALQ,CAAT;EAOA,OAAO;IAAElB,QAAF;IAAYE;EAAZ,CAAP;AACD,CAzCM;;GAAMJ,Q"},"metadata":{},"sourceType":"module"}