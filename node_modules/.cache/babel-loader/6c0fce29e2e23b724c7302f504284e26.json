{"ast":null,"code":"import { SubscriptionServices, UpdateProfileservice } from \"../../../utils/API\";\nimport { LoggedInUser } from \"../../common/Script\";\n// Get Profile\nexport const getProfileService = async item => {\n  return UpdateProfileservice.getUserProfile(item).then(res => res.data).catch(error => error);\n};\nexport const updateProfileService = async item => {\n  return UpdateProfileservice.updateUserProfile(item).then(res => res.status).catch(error => error);\n};\nexport const subscriptionService = async () => {\n  return SubscriptionServices.Subscription({\n    cusId: LoggedInUser\n  }).then(res => res.data).catch(error => error);\n};\nexport const setPlanService = async () => {\n  return SubscriptionServices.plans().then(res => res.data).catch(error => error);\n};\nexport const updateSubscriptionService = async item => {\n  return SubscriptionServices.UpdateSubscription(item).then(res => res.status).catch(error => error);\n};","map":{"version":3,"names":["SubscriptionServices","UpdateProfileservice","LoggedInUser","getProfileService","item","getUserProfile","then","res","data","catch","error","updateProfileService","updateUserProfile","status","subscriptionService","Subscription","cusId","setPlanService","plans","updateSubscriptionService","UpdateSubscription"],"sources":["C:/Users/arunm/MeMeglobalsites/Elysium/New folder/ElysiumChange/src/components/stateContainers/Profile/Services.ts"],"sourcesContent":["import { SubscriptionServices, UpdateProfileservice } from \"../../../utils/API\";\r\nimport { LoggedInUser } from \"../../common/Script\";\r\n\r\nexport interface IgetProfile {\r\n  phone: string;\r\n}\r\n\r\nexport interface IupdateProfile {\r\n  userid: number;\r\n  uPhone: string;\r\n  fname: string;\r\n  lname: string;\r\n  file: any;\r\n  email: string;\r\n}\r\n\r\n// Get Profile\r\nexport const getProfileService = async (item: IgetProfile): Promise<any> => {\r\n  return UpdateProfileservice.getUserProfile(item)\r\n    .then((res: any) => res.data)\r\n    .catch((error: any) => error);\r\n};\r\n\r\nexport const updateProfileService = async (item: any): Promise<any> => {\r\n  return UpdateProfileservice.updateUserProfile(item)\r\n    .then((res: any) => res.status)\r\n    .catch((error: any) => error);\r\n};\r\n\r\nexport const subscriptionService = async (): Promise<any> => {\r\n  return SubscriptionServices.Subscription({ cusId: LoggedInUser as string })\r\n    .then((res: any) => res.data)\r\n    .catch((error: any) => error);\r\n};\r\n\r\nexport const setPlanService = async (): Promise<any> => {\r\n  return SubscriptionServices.plans()\r\n    .then((res: any) => res.data)\r\n    .catch((error: any) => error);\r\n};\r\n\r\nexport const updateSubscriptionService = async (item: any): Promise<any> => {\r\n  return SubscriptionServices.UpdateSubscription(item)\r\n    .then((res: any) => res.status)\r\n    .catch((error: any) => error);\r\n};\r\n"],"mappings":"AAAA,SAASA,oBAAT,EAA+BC,oBAA/B,QAA2D,oBAA3D;AACA,SAASC,YAAT,QAA6B,qBAA7B;AAeA;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,IAAP,IAA2C;EAC1E,OAAOH,oBAAoB,CAACI,cAArB,CAAoCD,IAApC,EACJE,IADI,CACEC,GAAD,IAAcA,GAAG,CAACC,IADnB,EAEJC,KAFI,CAEGC,KAAD,IAAgBA,KAFlB,CAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,oBAAoB,GAAG,MAAOP,IAAP,IAAmC;EACrE,OAAOH,oBAAoB,CAACW,iBAArB,CAAuCR,IAAvC,EACJE,IADI,CACEC,GAAD,IAAcA,GAAG,CAACM,MADnB,EAEJJ,KAFI,CAEGC,KAAD,IAAgBA,KAFlB,CAAP;AAGD,CAJM;AAMP,OAAO,MAAMI,mBAAmB,GAAG,YAA0B;EAC3D,OAAOd,oBAAoB,CAACe,YAArB,CAAkC;IAAEC,KAAK,EAAEd;EAAT,CAAlC,EACJI,IADI,CACEC,GAAD,IAAcA,GAAG,CAACC,IADnB,EAEJC,KAFI,CAEGC,KAAD,IAAgBA,KAFlB,CAAP;AAGD,CAJM;AAMP,OAAO,MAAMO,cAAc,GAAG,YAA0B;EACtD,OAAOjB,oBAAoB,CAACkB,KAArB,GACJZ,IADI,CACEC,GAAD,IAAcA,GAAG,CAACC,IADnB,EAEJC,KAFI,CAEGC,KAAD,IAAgBA,KAFlB,CAAP;AAGD,CAJM;AAMP,OAAO,MAAMS,yBAAyB,GAAG,MAAOf,IAAP,IAAmC;EAC1E,OAAOJ,oBAAoB,CAACoB,kBAArB,CAAwChB,IAAxC,EACJE,IADI,CACEC,GAAD,IAAcA,GAAG,CAACM,MADnB,EAEJJ,KAFI,CAEGC,KAAD,IAAgBA,KAFlB,CAAP;AAGD,CAJM"},"metadata":{},"sourceType":"module"}