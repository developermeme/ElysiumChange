{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport { handleErrorResponse } from \"../../common/Script\";\nimport { setSpinnerLoad } from \"../Spinner/Slice\";\nimport { getProfileService, setPlanService, subscriptionService, updateProfileService, updateSubscriptionService } from \"./Services\";\nimport { setPlan, setProfileDetails, setReferral, setUpdateSubscription } from \"./Slice\";\nexport const getProfileDetails = item => {\n  return async (dispatch, getState) => {\n    try {\n      const response = await getProfileService(item);\n      dispatch(setProfileDetails(response));\n    } catch (error) {\n      console.log(error);\n      handleErrorResponse(error);\n    }\n  };\n};\nexport const updateUserProfile = item => {\n  return async (dispatch, getState) => {\n    const response = await updateProfileService(item);\n\n    if (response === 200) {\n      toast.success(\"Successfully updated\");\n      window.location.reload();\n    } else {\n      toast.error(\"Something Went Wrong\");\n    }\n  };\n};\nexport const getSubscriptionAction = () => {\n  return async (dispatch, getState) => {\n    dispatch(setSpinnerLoad(true));\n\n    try {\n      const response = await subscriptionService();\n      dispatch(setReferral(response));\n      setTimeout(() => {\n        dispatch(setSpinnerLoad(false));\n      }, 1000);\n    } catch (error) {\n      handleErrorResponse(error);\n      dispatch(setSpinnerLoad(false));\n    }\n  };\n};\nexport const getPlanAction = () => {\n  return async (dispatch, getState) => {\n    dispatch(setSpinnerLoad(true));\n\n    try {\n      const response = await setPlanService();\n      dispatch(setPlan(response));\n      setTimeout(() => {\n        dispatch(setSpinnerLoad(false));\n      }, 1000);\n    } catch (error) {\n      handleErrorResponse(error);\n      dispatch(setSpinnerLoad(false));\n    }\n  };\n};\nexport const updateSubscription = item => {\n  return async (dispatch, getState) => {\n    dispatch(setSpinnerLoad(true));\n\n    try {\n      const response = await updateSubscriptionService(item);\n\n      if (response.status === 200) {\n        dispatch(setUpdateSubscription(true));\n      }\n\n      setTimeout(() => {\n        dispatch(setSpinnerLoad(false));\n      }, 1000);\n      setTimeout(() => {\n        dispatch(setUpdateSubscription(false));\n      }, 2000);\n    } catch (error) {\n      handleErrorResponse(error);\n      dispatch(setSpinnerLoad(false));\n    }\n  };\n};","map":{"version":3,"names":["toast","handleErrorResponse","setSpinnerLoad","getProfileService","setPlanService","subscriptionService","updateProfileService","updateSubscriptionService","setPlan","setProfileDetails","setReferral","setUpdateSubscription","getProfileDetails","item","dispatch","getState","response","error","console","log","updateUserProfile","success","window","location","reload","getSubscriptionAction","setTimeout","getPlanAction","updateSubscription","status"],"sources":["C:/Users/arunm/MeMeglobalsites/Elysium/New folder/ElysiumChange/src/components/stateContainers/Profile/ThunkAction.ts"],"sourcesContent":["import { toast } from \"react-toastify\";\r\nimport { IProfile } from \"../../../model/IProductType\";\r\nimport { handleErrorResponse } from \"../../common/Script\";\r\nimport { setSpinnerLoad } from \"../Spinner/Slice\";\r\nimport {\r\n  getProfileService,\r\n  IgetProfile,\r\n  setPlanService,\r\n  subscriptionService,\r\n  updateProfileService,\r\n  updateSubscriptionService,\r\n} from \"./Services\";\r\nimport {\r\n  setPlan,\r\n  setProfileDetails,\r\n  setReferral,\r\n  setUpdateSubscription,\r\n} from \"./Slice\";\r\n\r\nexport const getProfileDetails = (item: IgetProfile) => {\r\n  return async (dispatch: any, getState: any) => {\r\n    try {\r\n      const response: IProfile = await getProfileService(item);\r\n      dispatch(setProfileDetails(response));\r\n    } catch (error) {\r\n      console.log(error);\r\n      handleErrorResponse(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateUserProfile = (item: any) => {\r\n  return async (dispatch: any, getState: any) => {\r\n    const response: any = await updateProfileService(item);\r\n    if (response === 200) {\r\n      toast.success(\"Successfully updated\");\r\n      window.location.reload();\r\n    } else {\r\n      toast.error(\"Something Went Wrong\");\r\n    }\r\n  };\r\n};\r\n\r\nexport const getSubscriptionAction = () => {\r\n  return async (dispatch: any, getState: any) => {\r\n    dispatch(setSpinnerLoad(true));\r\n    try {\r\n      const response: any = await subscriptionService();\r\n      dispatch(setReferral(response));\r\n      setTimeout(() => {\r\n        dispatch(setSpinnerLoad(false));\r\n      }, 1000);\r\n    } catch (error) {\r\n      handleErrorResponse(error);\r\n      dispatch(setSpinnerLoad(false));\r\n    }\r\n  };\r\n};\r\n\r\nexport const getPlanAction = () => {\r\n  return async (dispatch: any, getState: any) => {\r\n    dispatch(setSpinnerLoad(true));\r\n    try {\r\n      const response: any = await setPlanService();\r\n      dispatch(setPlan(response));\r\n      setTimeout(() => {\r\n        dispatch(setSpinnerLoad(false));\r\n      }, 1000);\r\n    } catch (error) {\r\n      handleErrorResponse(error);\r\n      dispatch(setSpinnerLoad(false));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateSubscription = (item: any) => {\r\n  return async (dispatch: any, getState: any) => {\r\n    dispatch(setSpinnerLoad(true));\r\n    try {\r\n      const response: any = await updateSubscriptionService(item);\r\n\r\n      if (response.status === 200) {\r\n        dispatch(setUpdateSubscription(true));\r\n      }\r\n\r\n      setTimeout(() => {\r\n        dispatch(setSpinnerLoad(false));\r\n      }, 1000);\r\n\r\n      setTimeout(() => {\r\n        dispatch(setUpdateSubscription(false));\r\n      }, 2000);\r\n    } catch (error) {\r\n      handleErrorResponse(error);\r\n      dispatch(setSpinnerLoad(false));\r\n    }\r\n  };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}