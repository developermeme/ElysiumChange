{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arunm\\\\MeMeglobalsites\\\\Elysium\\\\New folder\\\\ElysiumChange\\\\src\\\\components\\\\UserAccount\\\\Register\\\\Register.logic.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { RegisterView } from \"./Register.view\";\nimport RegisterOTP from \"./RegisterOTP\";\nimport Wrapper from \"../Wrapper/Wrapper.logic\";\nimport { useRegister } from \"../../../hook/useRegister.hook\";\nimport \"../UserAccount.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Register = () => {\n  _s();\n\n  const {\n    registerCredentials,\n    errors,\n    handleOnChange,\n    onFocusEvent,\n    registerOnSubmit,\n    successMsg,\n    handleCountrySelect,\n    countries,\n    selectedCountry,\n    isregistered\n  } = useRegister();\n  const regComponent = isregistered ? /*#__PURE__*/_jsxDEV(RegisterOTP, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(RegisterView, {\n    onChangeEvent: handleOnChange,\n    registerOnSubmit: registerOnSubmit,\n    credentials: registerCredentials,\n    errors: errors,\n    onFocusEvent: onFocusEvent,\n    successMsg: successMsg,\n    selectedCountry: selectedCountry,\n    handleCountrySelect: handleCountrySelect,\n    countries: countries\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    childComp: regComponent,\n    name: \"reg\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Register, \"hkidpZdXu1ghRlaEHTI19YKexMg=\", false, function () {\n  return [useRegister];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","RegisterView","RegisterOTP","Wrapper","useRegister","Register","registerCredentials","errors","handleOnChange","onFocusEvent","registerOnSubmit","successMsg","handleCountrySelect","countries","selectedCountry","isregistered","regComponent"],"sources":["C:/Users/arunm/MeMeglobalsites/Elysium/New folder/ElysiumChange/src/components/UserAccount/Register/Register.logic.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { RegisterView } from \"./Register.view\";\r\nimport RegisterOTP from \"./RegisterOTP\";\r\nimport Wrapper from \"../Wrapper/Wrapper.logic\";\r\nimport { useRegister } from \"../../../hook/useRegister.hook\";\r\nimport \"../UserAccount.scss\";\r\n\r\nexport const Register: React.FC = () => {\r\n  const {\r\n    registerCredentials,\r\n    errors,\r\n    handleOnChange,\r\n    onFocusEvent,\r\n    registerOnSubmit,\r\n    successMsg,\r\n    handleCountrySelect,\r\n    countries,\r\n    selectedCountry,\r\n    isregistered,\r\n  } = useRegister();\r\n\r\n  const regComponent = isregistered ? (\r\n    <RegisterOTP />\r\n  ) : (\r\n    <RegisterView\r\n      onChangeEvent={handleOnChange}\r\n      registerOnSubmit={registerOnSubmit}\r\n      credentials={registerCredentials}\r\n      errors={errors}\r\n      onFocusEvent={onFocusEvent}\r\n      successMsg={successMsg}\r\n      selectedCountry={selectedCountry}\r\n      handleCountrySelect={handleCountrySelect}\r\n      countries={countries}\r\n    />\r\n  );\r\n\r\n  return <Wrapper childComp={regComponent} name=\"reg\" />;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAASC,WAAT,QAA4B,gCAA5B;AACA,OAAO,qBAAP;;AAEA,OAAO,MAAMC,QAAkB,GAAG,MAAM;EAAA;;EACtC,MAAM;IACJC,mBADI;IAEJC,MAFI;IAGJC,cAHI;IAIJC,YAJI;IAKJC,gBALI;IAMJC,UANI;IAOJC,mBAPI;IAQJC,SARI;IASJC,eATI;IAUJC;EAVI,IAWFX,WAAW,EAXf;EAaA,MAAMY,YAAY,GAAGD,YAAY,gBAC/B,QAAC,WAAD;IAAA;IAAA;IAAA;EAAA,QAD+B,gBAG/B,QAAC,YAAD;IACE,aAAa,EAAEP,cADjB;IAEE,gBAAgB,EAAEE,gBAFpB;IAGE,WAAW,EAAEJ,mBAHf;IAIE,MAAM,EAAEC,MAJV;IAKE,YAAY,EAAEE,YALhB;IAME,UAAU,EAAEE,UANd;IAOE,eAAe,EAAEG,eAPnB;IAQE,mBAAmB,EAAEF,mBARvB;IASE,SAAS,EAAEC;EATb;IAAA;IAAA;IAAA;EAAA,QAHF;EAgBA,oBAAO,QAAC,OAAD;IAAS,SAAS,EAAEG,YAApB;IAAkC,IAAI,EAAC;EAAvC;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CA/BM;;GAAMX,Q;UAYPD,W;;;KAZOC,Q"},"metadata":{},"sourceType":"module"}