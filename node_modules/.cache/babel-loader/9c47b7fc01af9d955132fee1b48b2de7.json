{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { UserServices } from \"../../../utils/API\";\nimport { DeleteAddressItem, updateAddressList } from \"../../common/AddressScripts\";\nimport { Countries } from \"../../common/json/Countries\";\nimport { LoggedInUser } from \"../../common/Script\";\nimport { SetEditedAddress, SetSelecteddAddress } from \"../../stateContainers/Address/Slice\";\nimport { addUserAddress, deleteUserAddress, getUserAddressList } from \"../../stateContainers/Address/ThunkAction\";\nimport { AddToCart } from \"../../stateContainers/Cart/ThunkActions\";\nimport { deliveryService, sendPasswordToUserService } from \"../../stateContainers/SelectedProduct/Services\";\nimport { validateEmailId, validateMobileNumber, validateName } from \"../../UserAccount/Script\";\nimport { useCart } from \"../Cart/useCart.hook\";\nexport const useAddress = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    viewCart\n  } = useCart();\n  const {\n    addressData\n  } = useSelector(state => state);\n  const addressListRedux = addressData && addressData.addressList;\n  const editedAddress = addressData && addressData.EditedAddress;\n  const {\n    profileData\n  } = useSelector(state => state);\n  const userId = profileData && profileData.profileDetails.Profile.userid;\n  let addressList = [];\n  let addressItems = localStorage.getItem(\"user-address\");\n  if (addressItems) addressList = JSON.parse(addressItems);\n  const [selected, setSelected] = React.useState(0);\n  const [openUpdateView, setOpenUpdateView] = React.useState(false);\n\n  const toggleUpdateView = () => {\n    setOpenUpdateView(!openUpdateView);\n  };\n\n  const handleClick = no => {\n    setSelected(no);\n  };\n\n  const item = {\n    phone: LoggedInUser\n  }; // Form Validation\n\n  const initialState = {\n    name: \"\",\n    phone: \"\",\n    flatNo: \"\",\n    street: \"\",\n    landMark: \"\",\n    city: \"\",\n    state: \"\",\n    pin: \"\",\n    uPhone: \"\"\n  };\n  const initialValues = editedAddress ? editedAddress : initialState;\n  const [state, setState] = React.useState(initialValues);\n  const [error, setError] = React.useState();\n  const [visible, setVisible] = React.useState(false); // API Calls\n\n  const fetchAddreses = () => {\n    dispatch(getUserAddressList(item));\n  };\n\n  const RemoveAddreses = num => {\n    DeleteAddressItem(num);\n\n    if (LoggedInUser) {\n      dispatch(deleteUserAddress({\n        id: num\n      }));\n    } else {\n      window.location.reload();\n    }\n  };\n\n  const handleOnChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setState({ ...state,\n      [name]: value\n    });\n    setVisible(false);\n    setError(null);\n  };\n\n  React.useEffect(() => {\n    if (!error) {\n      setVisible(false);\n      return;\n    }\n\n    setVisible(true);\n    const timer = setTimeout(() => {\n      setVisible(false);\n    }, 3000);\n    return () => clearTimeout(timer);\n  }, [error]); //Country Change\n\n  const countries = Countries.map(item => {\n    return item.name;\n  });\n  const [selectedCountry, setSelectedCountry] = React.useState(\"\");\n  const [selectedRegion, setSelectedRegion] = React.useState(\"\");\n\n  const handleCountrySelect = e => {\n    e.preventDefault();\n    setSelectedCountry(e.target.value);\n  };\n\n  React.useEffect(() => {\n    const regionList = Countries.find((item, index) => item.name === selectedCountry);\n    setSelectedRegion(regionList === null || regionList === void 0 ? void 0 : regionList.dialCode);\n  }, [selectedCountry]);\n\n  const validate = () => {\n    let fields = state;\n    let errors = \"\";\n    let formIsValid = true;\n    const isValidName = validateName(fields.name, \"name\");\n    const isValidEmail = validateEmailId(fields.phone);\n    const isValidMobileNumber = validateMobileNumber(fields.uPhone);\n\n    if (fields.flatNo === \"\" || fields.street === \"\" || fields.city === \"\" || fields.state === \"\" || fields.landMark === \"\" || fields.pin === \"\") {\n      errors = \"Please enter all the fields\";\n      formIsValid = false;\n    } else if (formIsValid && !isValidName.formIsValid) {\n      errors = isValidName.error;\n      formIsValid = false;\n    } else if (formIsValid && !isValidEmail.formIsValid) {\n      errors = isValidEmail.error;\n      formIsValid = false;\n    } else if (formIsValid && !isValidMobileNumber.formIsValid) {\n      errors = isValidMobileNumber.error;\n      formIsValid = false;\n    } else if (formIsValid && selectedRegion === undefined) {\n      formIsValid = false;\n      errors = \"Please select your country\";\n    } else {\n      errors = \"\";\n      formIsValid = true;\n    }\n\n    setError(errors);\n    return formIsValid;\n  };\n\n  const handleOnSubmit = (e, toggleUpdateView) => {\n    e.preventDefault();\n\n    if (validate()) {\n      let credentials = { ...state\n      };\n      credentials.uPhone = selectedRegion + credentials.uPhone;\n      updateAddressList(credentials);\n      toggleUpdateView();\n    } else {\n      setVisible(true);\n    }\n  };\n\n  const onClickEdit = (item, toggleUpdateView) => {\n    dispatch(SetEditedAddress(item));\n    toggleUpdateView();\n  };\n\n  const onClickCancel = toggleUpdateView => {\n    dispatch(SetEditedAddress({}));\n    window.location.reload();\n    toggleUpdateView();\n  };\n\n  const onAddNewCancel = toggleUpdateView => {\n    dispatch(SetEditedAddress({}));\n    toggleUpdateView();\n  };\n\n  const onAddNewAdd = (e, toggleUpdateView) => {\n    e.preventDefault();\n    dispatch(SetEditedAddress({}));\n    toggleUpdateView();\n  }; //Add Cart to API\n\n\n  const addCartItems = async (id, emailId) => {\n    var _viewCart$cartItem;\n\n    const items = (_viewCart$cartItem = viewCart.cartItem) === null || _viewCart$cartItem === void 0 ? void 0 : _viewCart$cartItem.map(item => {\n      return {\n        pId: item.productInfo.productCode,\n        custId: emailId,\n        price: item.productInfo.originalPrice,\n        qty: item.quantity,\n        size: item.productInfo.size\n      };\n    });\n    dispatch(AddToCart(items));\n  }; //Add address to API\n\n\n  const addAddress = async (selectedAddress, id) => {\n    let updatedResult = {\n      name: selectedAddress.name,\n      phone: selectedAddress.uPhone,\n      email: selectedAddress.phone,\n      flatNo: selectedAddress.flatNo,\n      street: selectedAddress.street,\n      landMark: selectedAddress.landMark,\n      city: selectedAddress.city,\n      state: selectedAddress.state,\n      pin: selectedAddress.pin,\n      userid: id\n    };\n    dispatch(addUserAddress(updatedResult));\n  };\n\n  const checkDelivery = async pin => {\n    await deliveryService({\n      zipcode: pin\n    }).then(res => {\n      if (res === \"Available\") {\n        navigate(\"/pay\");\n      } else {\n        toast(`dispatch not available at ${pin}`);\n      }\n    }).catch(error => {\n      console.log(\"Error\", error);\n      toast(\"Something went wrong\");\n    });\n  };\n\n  const AddUserDetails = async (selectedAddress, id) => {\n    const AddressItem = {\n      address: selectedAddress,\n      uName: selectedAddress.name,\n      uPhone: selectedAddress.phone,\n      userid: id\n    };\n    localStorage.setItem(\"selected-address\", JSON.stringify(AddressItem));\n    dispatch(SetSelecteddAddress(AddressItem));\n    await checkDelivery(selectedAddress.pin);\n    await addCartItems(id, selectedAddress.phone);\n    await addAddress(selectedAddress, id);\n  };\n\n  const sendPasswordToUser = async (username, password, id, selectedAddress) => {\n    await sendPasswordToUserService({\n      username,\n      password,\n      phone: selectedAddress.uPhone\n    }).then(async res => {\n      toast.info(\"Password Sent to your registered email address\");\n      await AddUserDetails(selectedAddress, id);\n    }).catch(error => {\n      console.log(\"Error\", error);\n      toast.error(\"Something went wrong while registering user credentials\");\n    });\n  };\n\n  const RegisterUser = async selectedAddress => {\n    const credentials = {\n      fname: selectedAddress.name,\n      email: selectedAddress.phone,\n      uPhone: selectedAddress.uPhone,\n      password: \"Nazca@78\"\n    };\n    await UserServices.guestUserRegistration(credentials).then(async res => {\n      if (res.data) {\n        const id = res.data.split(\":\")[1];\n        await sendPasswordToUser(credentials.email, credentials.password, id, selectedAddress);\n      }\n    }).catch(error => {\n      var _error$response;\n\n      console.log(\"Error - \", error === null || error === void 0 ? void 0 : error.response);\n\n      if ((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 409) {\n        toast.info(\"Already registered with this email, Please Login\");\n        setTimeout(() => {\n          navigate(\"/auth/login\");\n        }, 5000);\n      } else {\n        toast.error(\"Something Went Wrong please try again later\");\n      }\n    });\n  };\n\n  const continuePaymentClick = async () => {\n    const selectedAddress = addressList.find((item, index) => index === selected);\n    toast.info(\"Processing...\");\n\n    if (selectedAddress) {\n      if (LoggedInUser) {\n        await AddUserDetails(selectedAddress, userId);\n      } else {\n        await RegisterUser(selectedAddress);\n      }\n    } else {\n      toast.info(\"Add your Address\");\n    }\n  };\n\n  return {\n    fetchAddreses,\n    addressList,\n    selected,\n    handleClick,\n    RemoveAddreses,\n    openUpdateView,\n    toggleUpdateView,\n    state,\n    error,\n    visible,\n    handleOnChange,\n    handleOnSubmit,\n    onClickEdit,\n    onClickCancel,\n    onAddNewCancel,\n    continuePaymentClick,\n    onAddNewAdd,\n    addressListRedux,\n    handleCountrySelect,\n    countries,\n    selectedRegion,\n    selectedCountry\n  };\n};\n\n_s(useAddress, \"/fOFZ7bnfQFYMcPRdBDarcRN528=\", false, function () {\n  return [useNavigate, useDispatch, useCart, useSelector, useSelector];\n});","map":{"version":3,"names":["React","toast","useNavigate","useDispatch","useSelector","UserServices","DeleteAddressItem","updateAddressList","Countries","LoggedInUser","SetEditedAddress","SetSelecteddAddress","addUserAddress","deleteUserAddress","getUserAddressList","AddToCart","deliveryService","sendPasswordToUserService","validateEmailId","validateMobileNumber","validateName","useCart","useAddress","navigate","dispatch","viewCart","addressData","state","addressListRedux","addressList","editedAddress","EditedAddress","profileData","userId","profileDetails","Profile","userid","addressItems","localStorage","getItem","JSON","parse","selected","setSelected","useState","openUpdateView","setOpenUpdateView","toggleUpdateView","handleClick","no","item","phone","initialState","name","flatNo","street","landMark","city","pin","uPhone","initialValues","setState","error","setError","visible","setVisible","fetchAddreses","RemoveAddreses","num","id","window","location","reload","handleOnChange","e","target","value","useEffect","timer","setTimeout","clearTimeout","countries","map","selectedCountry","setSelectedCountry","selectedRegion","setSelectedRegion","handleCountrySelect","preventDefault","regionList","find","index","dialCode","validate","fields","errors","formIsValid","isValidName","isValidEmail","isValidMobileNumber","undefined","handleOnSubmit","credentials","onClickEdit","onClickCancel","onAddNewCancel","onAddNewAdd","addCartItems","emailId","items","cartItem","pId","productInfo","productCode","custId","price","originalPrice","qty","quantity","size","addAddress","selectedAddress","updatedResult","email","checkDelivery","zipcode","then","res","catch","console","log","AddUserDetails","AddressItem","address","uName","setItem","stringify","sendPasswordToUser","username","password","info","RegisterUser","fname","guestUserRegistration","data","split","response","status","continuePaymentClick"],"sources":["C:/Users/arunm/MeMeglobalsites/Elysium/New folder/ElysiumChange/src/components/containers/Address/useAddress.hook.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { onChange, onClick } from \"../../../constant/Types\";\r\nimport { IAddress, ICartItemResponse } from \"../../../model/IProductType\";\r\nimport { IRootState } from \"../../../redux/reducer/CombineReducer\";\r\nimport { UserServices } from \"../../../utils/API\";\r\nimport {\r\n  DeleteAddressItem,\r\n  updateAddressList,\r\n} from \"../../common/AddressScripts\";\r\nimport { Countries } from \"../../common/json/Countries\";\r\nimport { LoggedInUser } from \"../../common/Script\";\r\nimport { IAddAddress } from \"../../stateContainers/Address/Service\";\r\nimport {\r\n  SetEditedAddress,\r\n  SetSelecteddAddress,\r\n} from \"../../stateContainers/Address/Slice\";\r\nimport {\r\n  addUserAddress,\r\n  deleteUserAddress,\r\n  getUserAddressList,\r\n} from \"../../stateContainers/Address/ThunkAction\";\r\nimport { AddToCart } from \"../../stateContainers/Cart/ThunkActions\";\r\nimport {\r\n  deliveryService,\r\n  sendPasswordToUserService,\r\n} from \"../../stateContainers/SelectedProduct/Services\";\r\nimport {\r\n  validateEmailId,\r\n  validateMobileNumber,\r\n  validateName,\r\n} from \"../../UserAccount/Script\";\r\nimport { useCart } from \"../Cart/useCart.hook\";\r\n\r\nexport const useAddress = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { viewCart } = useCart();\r\n\r\n  const { addressData } = useSelector((state: IRootState) => state);\r\n  const addressListRedux = addressData && addressData.addressList;\r\n  const editedAddress = addressData && addressData.EditedAddress;\r\n  const { profileData } = useSelector((state: IRootState) => state);\r\n  const userId = profileData && profileData.profileDetails.Profile.userid;\r\n\r\n  let addressList: IAddress[] = [];\r\n  let addressItems = localStorage.getItem(\"user-address\") as any;\r\n  if (addressItems) addressList = JSON.parse(addressItems as string);\r\n\r\n  const [selected, setSelected] = React.useState(0);\r\n  const [openUpdateView, setOpenUpdateView] = React.useState(false);\r\n\r\n  const toggleUpdateView = () => {\r\n    setOpenUpdateView(!openUpdateView);\r\n  };\r\n\r\n  const handleClick = (no: number) => {\r\n    setSelected(no);\r\n  };\r\n\r\n  const item = {\r\n    phone: LoggedInUser as string,\r\n  };\r\n\r\n  // Form Validation\r\n  const initialState = {\r\n    name: \"\",\r\n    phone: \"\",\r\n    flatNo: \"\",\r\n    street: \"\",\r\n    landMark: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    pin: \"\",\r\n    uPhone: \"\",\r\n  };\r\n\r\n  const initialValues = editedAddress ? editedAddress : initialState;\r\n  const [state, setState] = React.useState<any>(initialValues);\r\n  const [error, setError] = React.useState<string | null>();\r\n  const [visible, setVisible] = React.useState(false);\r\n\r\n  // API Calls\r\n  const fetchAddreses = () => {\r\n    dispatch(getUserAddressList(item));\r\n  };\r\n\r\n  const RemoveAddreses = (num: number) => {\r\n    DeleteAddressItem(num);\r\n    if (LoggedInUser) {\r\n      dispatch(deleteUserAddress({ id: num }));\r\n    } else {\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (e: onChange) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setState({ ...state, [name]: value });\r\n    setVisible(false);\r\n    setError(null);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (!error) {\r\n      setVisible(false);\r\n      return;\r\n    }\r\n    setVisible(true);\r\n    const timer = setTimeout(() => {\r\n      setVisible(false);\r\n    }, 3000);\r\n    return () => clearTimeout(timer);\r\n  }, [error]);\r\n\r\n  //Country Change\r\n\r\n  const countries = Countries.map((item: any) => {\r\n    return item.name;\r\n  });\r\n  const [selectedCountry, setSelectedCountry] = React.useState(\"\");\r\n  const [selectedRegion, setSelectedRegion] = React.useState<\r\n    string | undefined\r\n  >(\"\");\r\n\r\n  const handleCountrySelect = (e: any) => {\r\n    e.preventDefault();\r\n    setSelectedCountry(e.target.value);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const regionList = Countries.find(\r\n      (item: any, index) => item.name === selectedCountry\r\n    );\r\n    setSelectedRegion(regionList?.dialCode);\r\n  }, [selectedCountry]);\r\n\r\n  const validate = () => {\r\n    let fields = state;\r\n    let errors = \"\";\r\n    let formIsValid = true;\r\n\r\n    const isValidName = validateName(fields.name, \"name\");\r\n    const isValidEmail = validateEmailId(fields.phone);\r\n    const isValidMobileNumber = validateMobileNumber(fields.uPhone);\r\n\r\n    if (\r\n      fields.flatNo === \"\" ||\r\n      fields.street === \"\" ||\r\n      fields.city === \"\" ||\r\n      fields.state === \"\" ||\r\n      fields.landMark === \"\" ||\r\n      fields.pin === \"\"\r\n    ) {\r\n      errors = \"Please enter all the fields\";\r\n      formIsValid = false;\r\n    } else if (formIsValid && !isValidName.formIsValid) {\r\n      errors = isValidName.error;\r\n      formIsValid = false;\r\n    } else if (formIsValid && !isValidEmail.formIsValid) {\r\n      errors = isValidEmail.error;\r\n      formIsValid = false;\r\n    } else if (formIsValid && !isValidMobileNumber.formIsValid) {\r\n      errors = isValidMobileNumber.error;\r\n      formIsValid = false;\r\n    } else if (formIsValid && selectedRegion === undefined) {\r\n      formIsValid = false;\r\n      errors = \"Please select your country\";\r\n    } else {\r\n      errors = \"\";\r\n      formIsValid = true;\r\n    }\r\n    setError(errors);\r\n    return formIsValid;\r\n  };\r\n\r\n  const handleOnSubmit = (e: onClick, toggleUpdateView: any) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      let credentials = { ...state };\r\n      credentials.uPhone = selectedRegion + credentials.uPhone;\r\n      updateAddressList(credentials);\r\n      toggleUpdateView();\r\n    } else {\r\n      setVisible(true);\r\n    }\r\n  };\r\n\r\n  const onClickEdit = (item: any, toggleUpdateView: any) => {\r\n    dispatch(SetEditedAddress(item));\r\n    toggleUpdateView();\r\n  };\r\n\r\n  const onClickCancel = (toggleUpdateView: any) => {\r\n    dispatch(SetEditedAddress({} as IAddAddress));\r\n    window.location.reload();\r\n    toggleUpdateView();\r\n  };\r\n\r\n  const onAddNewCancel = (toggleUpdateView: any) => {\r\n    dispatch(SetEditedAddress({} as IAddAddress));\r\n    toggleUpdateView();\r\n  };\r\n\r\n  const onAddNewAdd = (e: onClick, toggleUpdateView: any) => {\r\n    e.preventDefault();\r\n    dispatch(SetEditedAddress({} as IAddAddress));\r\n    toggleUpdateView();\r\n  };\r\n\r\n  //Add Cart to API\r\n  const addCartItems = async (id: number, emailId: string) => {\r\n    const items = viewCart.cartItem?.map((item: ICartItemResponse) => {\r\n      return {\r\n        pId: item.productInfo.productCode,\r\n        custId: emailId,\r\n        price: item.productInfo.originalPrice,\r\n        qty: item.quantity,\r\n        size: item.productInfo.size,\r\n      };\r\n    });\r\n    dispatch(AddToCart(items));\r\n  };\r\n\r\n  //Add address to API\r\n  const addAddress = async (selectedAddress: IAddress, id: number) => {\r\n    let updatedResult = {\r\n      name: selectedAddress.name,\r\n      phone: selectedAddress.uPhone,\r\n      email: selectedAddress.phone,\r\n      flatNo: selectedAddress.flatNo,\r\n      street: selectedAddress.street,\r\n      landMark: selectedAddress.landMark,\r\n      city: selectedAddress.city,\r\n      state: selectedAddress.state,\r\n      pin: selectedAddress.pin,\r\n      userid: id,\r\n    };\r\n    dispatch(addUserAddress(updatedResult));\r\n  };\r\n\r\n  const checkDelivery = async (pin: any) => {\r\n    await deliveryService({ zipcode: pin })\r\n      .then((res) => {\r\n        if (res === \"Available\") {\r\n          navigate(\"/pay\");\r\n        } else {\r\n          toast(`dispatch not available at ${pin}`);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        toast(\"Something went wrong\");\r\n      });\r\n  };\r\n\r\n  const AddUserDetails = async (selectedAddress: IAddress, id: number) => {\r\n    const AddressItem = {\r\n      address: selectedAddress as IAddress,\r\n      uName: selectedAddress.name,\r\n      uPhone: selectedAddress.phone,\r\n      userid: id,\r\n    };\r\n    localStorage.setItem(\"selected-address\", JSON.stringify(AddressItem));\r\n    dispatch(SetSelecteddAddress(AddressItem));\r\n    await checkDelivery(selectedAddress.pin);\r\n    await addCartItems(id, selectedAddress.phone);\r\n    await addAddress(selectedAddress, id);\r\n  };\r\n\r\n  const sendPasswordToUser = async (\r\n    username: string,\r\n    password: string,\r\n    id: any,\r\n    selectedAddress: IAddress\r\n  ) => {\r\n    await sendPasswordToUserService({\r\n      username,\r\n      password,\r\n      phone: selectedAddress.uPhone,\r\n    })\r\n      .then(async (res) => {\r\n        toast.info(\"Password Sent to your registered email address\");\r\n        await AddUserDetails(selectedAddress, id);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        toast.error(\"Something went wrong while registering user credentials\");\r\n      });\r\n  };\r\n\r\n  const RegisterUser = async (selectedAddress: IAddress) => {\r\n    const credentials = {\r\n      fname: selectedAddress.name,\r\n      email: selectedAddress.phone,\r\n      uPhone: selectedAddress.uPhone,\r\n      password: \"Nazca@78\",\r\n    };\r\n    await UserServices.guestUserRegistration(credentials)\r\n      .then(async (res: any) => {\r\n        if (res.data) {\r\n          const id = res.data.split(\":\")[1];\r\n          await sendPasswordToUser(\r\n            credentials.email,\r\n            credentials.password,\r\n            id,\r\n            selectedAddress\r\n          );\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        console.log(\"Error - \", error?.response);\r\n        if (error?.response?.status === 409) {\r\n          toast.info(\"Already registered with this email, Please Login\");\r\n          setTimeout(() => {\r\n            navigate(\"/auth/login\");\r\n          }, 5000);\r\n        } else {\r\n          toast.error(\"Something Went Wrong please try again later\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const continuePaymentClick = async () => {\r\n    const selectedAddress = addressList.find(\r\n      (item: IAddress, index: number) => index === selected\r\n    );\r\n    toast.info(\"Processing...\");\r\n    if (selectedAddress) {\r\n      if (LoggedInUser) {\r\n        await AddUserDetails(selectedAddress, userId);\r\n      } else {\r\n        await RegisterUser(selectedAddress);\r\n      }\r\n    } else {\r\n      toast.info(\"Add your Address\");\r\n    }\r\n  };\r\n\r\n  return {\r\n    fetchAddreses,\r\n    addressList,\r\n    selected,\r\n    handleClick,\r\n    RemoveAddreses,\r\n    openUpdateView,\r\n    toggleUpdateView,\r\n    state,\r\n    error,\r\n    visible,\r\n    handleOnChange,\r\n    handleOnSubmit,\r\n    onClickEdit,\r\n    onClickCancel,\r\n    onAddNewCancel,\r\n    continuePaymentClick,\r\n    onAddNewAdd,\r\n    addressListRedux,\r\n    handleCountrySelect,\r\n    countries,\r\n    selectedRegion,\r\n    selectedCountry,\r\n  };\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAIA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SACEC,iBADF,EAEEC,iBAFF,QAGO,6BAHP;AAIA,SAASC,SAAT,QAA0B,6BAA1B;AACA,SAASC,YAAT,QAA6B,qBAA7B;AAEA,SACEC,gBADF,EAEEC,mBAFF,QAGO,qCAHP;AAIA,SACEC,cADF,EAEEC,iBAFF,EAGEC,kBAHF,QAIO,2CAJP;AAKA,SAASC,SAAT,QAA0B,yCAA1B;AACA,SACEC,eADF,EAEEC,yBAFF,QAGO,gDAHP;AAIA,SACEC,eADF,EAEEC,oBAFF,EAGEC,YAHF,QAIO,0BAJP;AAKA,SAASC,OAAT,QAAwB,sBAAxB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;EAAA;;EAC9B,MAAMC,QAAQ,GAAGrB,WAAW,EAA5B;EACA,MAAMsB,QAAQ,GAAGrB,WAAW,EAA5B;EACA,MAAM;IAAEsB;EAAF,IAAeJ,OAAO,EAA5B;EAEA,MAAM;IAAEK;EAAF,IAAkBtB,WAAW,CAAEuB,KAAD,IAAuBA,KAAxB,CAAnC;EACA,MAAMC,gBAAgB,GAAGF,WAAW,IAAIA,WAAW,CAACG,WAApD;EACA,MAAMC,aAAa,GAAGJ,WAAW,IAAIA,WAAW,CAACK,aAAjD;EACA,MAAM;IAAEC;EAAF,IAAkB5B,WAAW,CAAEuB,KAAD,IAAuBA,KAAxB,CAAnC;EACA,MAAMM,MAAM,GAAGD,WAAW,IAAIA,WAAW,CAACE,cAAZ,CAA2BC,OAA3B,CAAmCC,MAAjE;EAEA,IAAIP,WAAuB,GAAG,EAA9B;EACA,IAAIQ,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAnB;EACA,IAAIF,YAAJ,EAAkBR,WAAW,GAAGW,IAAI,CAACC,KAAL,CAAWJ,YAAX,CAAd;EAElB,MAAM,CAACK,QAAD,EAAWC,WAAX,IAA0B3C,KAAK,CAAC4C,QAAN,CAAe,CAAf,CAAhC;EACA,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsC9C,KAAK,CAAC4C,QAAN,CAAe,KAAf,CAA5C;;EAEA,MAAMG,gBAAgB,GAAG,MAAM;IAC7BD,iBAAiB,CAAC,CAACD,cAAF,CAAjB;EACD,CAFD;;EAIA,MAAMG,WAAW,GAAIC,EAAD,IAAgB;IAClCN,WAAW,CAACM,EAAD,CAAX;EACD,CAFD;;EAIA,MAAMC,IAAI,GAAG;IACXC,KAAK,EAAE1C;EADI,CAAb,CA1B8B,CA8B9B;;EACA,MAAM2C,YAAY,GAAG;IACnBC,IAAI,EAAE,EADa;IAEnBF,KAAK,EAAE,EAFY;IAGnBG,MAAM,EAAE,EAHW;IAInBC,MAAM,EAAE,EAJW;IAKnBC,QAAQ,EAAE,EALS;IAMnBC,IAAI,EAAE,EANa;IAOnB9B,KAAK,EAAE,EAPY;IAQnB+B,GAAG,EAAE,EARc;IASnBC,MAAM,EAAE;EATW,CAArB;EAYA,MAAMC,aAAa,GAAG9B,aAAa,GAAGA,aAAH,GAAmBsB,YAAtD;EACA,MAAM,CAACzB,KAAD,EAAQkC,QAAR,IAAoB7D,KAAK,CAAC4C,QAAN,CAAoBgB,aAApB,CAA1B;EACA,MAAM,CAACE,KAAD,EAAQC,QAAR,IAAoB/D,KAAK,CAAC4C,QAAN,EAA1B;EACA,MAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBjE,KAAK,CAAC4C,QAAN,CAAe,KAAf,CAA9B,CA9C8B,CAgD9B;;EACA,MAAMsB,aAAa,GAAG,MAAM;IAC1B1C,QAAQ,CAACV,kBAAkB,CAACoC,IAAD,CAAnB,CAAR;EACD,CAFD;;EAIA,MAAMiB,cAAc,GAAIC,GAAD,IAAiB;IACtC9D,iBAAiB,CAAC8D,GAAD,CAAjB;;IACA,IAAI3D,YAAJ,EAAkB;MAChBe,QAAQ,CAACX,iBAAiB,CAAC;QAAEwD,EAAE,EAAED;MAAN,CAAD,CAAlB,CAAR;IACD,CAFD,MAEO;MACLE,MAAM,CAACC,QAAP,CAAgBC,MAAhB;IACD;EACF,CAPD;;EASA,MAAMC,cAAc,GAAIC,CAAD,IAAiB;IACtC,MAAMrB,IAAI,GAAGqB,CAAC,CAACC,MAAF,CAAStB,IAAtB;IACA,MAAMuB,KAAK,GAAGF,CAAC,CAACC,MAAF,CAASC,KAAvB;IACAf,QAAQ,CAAC,EAAE,GAAGlC,KAAL;MAAY,CAAC0B,IAAD,GAAQuB;IAApB,CAAD,CAAR;IACAX,UAAU,CAAC,KAAD,CAAV;IACAF,QAAQ,CAAC,IAAD,CAAR;EACD,CAND;;EAQA/D,KAAK,CAAC6E,SAAN,CAAgB,MAAM;IACpB,IAAI,CAACf,KAAL,EAAY;MACVG,UAAU,CAAC,KAAD,CAAV;MACA;IACD;;IACDA,UAAU,CAAC,IAAD,CAAV;IACA,MAAMa,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7Bd,UAAU,CAAC,KAAD,CAAV;IACD,CAFuB,EAErB,IAFqB,CAAxB;IAGA,OAAO,MAAMe,YAAY,CAACF,KAAD,CAAzB;EACD,CAVD,EAUG,CAAChB,KAAD,CAVH,EAtE8B,CAkF9B;;EAEA,MAAMmB,SAAS,GAAGzE,SAAS,CAAC0E,GAAV,CAAehC,IAAD,IAAe;IAC7C,OAAOA,IAAI,CAACG,IAAZ;EACD,CAFiB,CAAlB;EAGA,MAAM,CAAC8B,eAAD,EAAkBC,kBAAlB,IAAwCpF,KAAK,CAAC4C,QAAN,CAAe,EAAf,CAA9C;EACA,MAAM,CAACyC,cAAD,EAAiBC,iBAAjB,IAAsCtF,KAAK,CAAC4C,QAAN,CAE1C,EAF0C,CAA5C;;EAIA,MAAM2C,mBAAmB,GAAIb,CAAD,IAAY;IACtCA,CAAC,CAACc,cAAF;IACAJ,kBAAkB,CAACV,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;EACD,CAHD;;EAKA5E,KAAK,CAAC6E,SAAN,CAAgB,MAAM;IACpB,MAAMY,UAAU,GAAGjF,SAAS,CAACkF,IAAV,CACjB,CAACxC,IAAD,EAAYyC,KAAZ,KAAsBzC,IAAI,CAACG,IAAL,KAAc8B,eADnB,CAAnB;IAGAG,iBAAiB,CAACG,UAAD,aAACA,UAAD,uBAACA,UAAU,CAAEG,QAAb,CAAjB;EACD,CALD,EAKG,CAACT,eAAD,CALH;;EAOA,MAAMU,QAAQ,GAAG,MAAM;IACrB,IAAIC,MAAM,GAAGnE,KAAb;IACA,IAAIoE,MAAM,GAAG,EAAb;IACA,IAAIC,WAAW,GAAG,IAAlB;IAEA,MAAMC,WAAW,GAAG7E,YAAY,CAAC0E,MAAM,CAACzC,IAAR,EAAc,MAAd,CAAhC;IACA,MAAM6C,YAAY,GAAGhF,eAAe,CAAC4E,MAAM,CAAC3C,KAAR,CAApC;IACA,MAAMgD,mBAAmB,GAAGhF,oBAAoB,CAAC2E,MAAM,CAACnC,MAAR,CAAhD;;IAEA,IACEmC,MAAM,CAACxC,MAAP,KAAkB,EAAlB,IACAwC,MAAM,CAACvC,MAAP,KAAkB,EADlB,IAEAuC,MAAM,CAACrC,IAAP,KAAgB,EAFhB,IAGAqC,MAAM,CAACnE,KAAP,KAAiB,EAHjB,IAIAmE,MAAM,CAACtC,QAAP,KAAoB,EAJpB,IAKAsC,MAAM,CAACpC,GAAP,KAAe,EANjB,EAOE;MACAqC,MAAM,GAAG,6BAAT;MACAC,WAAW,GAAG,KAAd;IACD,CAVD,MAUO,IAAIA,WAAW,IAAI,CAACC,WAAW,CAACD,WAAhC,EAA6C;MAClDD,MAAM,GAAGE,WAAW,CAACnC,KAArB;MACAkC,WAAW,GAAG,KAAd;IACD,CAHM,MAGA,IAAIA,WAAW,IAAI,CAACE,YAAY,CAACF,WAAjC,EAA8C;MACnDD,MAAM,GAAGG,YAAY,CAACpC,KAAtB;MACAkC,WAAW,GAAG,KAAd;IACD,CAHM,MAGA,IAAIA,WAAW,IAAI,CAACG,mBAAmB,CAACH,WAAxC,EAAqD;MAC1DD,MAAM,GAAGI,mBAAmB,CAACrC,KAA7B;MACAkC,WAAW,GAAG,KAAd;IACD,CAHM,MAGA,IAAIA,WAAW,IAAIX,cAAc,KAAKe,SAAtC,EAAiD;MACtDJ,WAAW,GAAG,KAAd;MACAD,MAAM,GAAG,4BAAT;IACD,CAHM,MAGA;MACLA,MAAM,GAAG,EAAT;MACAC,WAAW,GAAG,IAAd;IACD;;IACDjC,QAAQ,CAACgC,MAAD,CAAR;IACA,OAAOC,WAAP;EACD,CArCD;;EAuCA,MAAMK,cAAc,GAAG,CAAC3B,CAAD,EAAa3B,gBAAb,KAAuC;IAC5D2B,CAAC,CAACc,cAAF;;IACA,IAAIK,QAAQ,EAAZ,EAAgB;MACd,IAAIS,WAAW,GAAG,EAAE,GAAG3E;MAAL,CAAlB;MACA2E,WAAW,CAAC3C,MAAZ,GAAqB0B,cAAc,GAAGiB,WAAW,CAAC3C,MAAlD;MACApD,iBAAiB,CAAC+F,WAAD,CAAjB;MACAvD,gBAAgB;IACjB,CALD,MAKO;MACLkB,UAAU,CAAC,IAAD,CAAV;IACD;EACF,CAVD;;EAYA,MAAMsC,WAAW,GAAG,CAACrD,IAAD,EAAYH,gBAAZ,KAAsC;IACxDvB,QAAQ,CAACd,gBAAgB,CAACwC,IAAD,CAAjB,CAAR;IACAH,gBAAgB;EACjB,CAHD;;EAKA,MAAMyD,aAAa,GAAIzD,gBAAD,IAA2B;IAC/CvB,QAAQ,CAACd,gBAAgB,CAAC,EAAD,CAAjB,CAAR;IACA4D,MAAM,CAACC,QAAP,CAAgBC,MAAhB;IACAzB,gBAAgB;EACjB,CAJD;;EAMA,MAAM0D,cAAc,GAAI1D,gBAAD,IAA2B;IAChDvB,QAAQ,CAACd,gBAAgB,CAAC,EAAD,CAAjB,CAAR;IACAqC,gBAAgB;EACjB,CAHD;;EAKA,MAAM2D,WAAW,GAAG,CAAChC,CAAD,EAAa3B,gBAAb,KAAuC;IACzD2B,CAAC,CAACc,cAAF;IACAhE,QAAQ,CAACd,gBAAgB,CAAC,EAAD,CAAjB,CAAR;IACAqC,gBAAgB;EACjB,CAJD,CA3K8B,CAiL9B;;;EACA,MAAM4D,YAAY,GAAG,OAAOtC,EAAP,EAAmBuC,OAAnB,KAAuC;IAAA;;IAC1D,MAAMC,KAAK,yBAAGpF,QAAQ,CAACqF,QAAZ,uDAAG,mBAAmB5B,GAAnB,CAAwBhC,IAAD,IAA6B;MAChE,OAAO;QACL6D,GAAG,EAAE7D,IAAI,CAAC8D,WAAL,CAAiBC,WADjB;QAELC,MAAM,EAAEN,OAFH;QAGLO,KAAK,EAAEjE,IAAI,CAAC8D,WAAL,CAAiBI,aAHnB;QAILC,GAAG,EAAEnE,IAAI,CAACoE,QAJL;QAKLC,IAAI,EAAErE,IAAI,CAAC8D,WAAL,CAAiBO;MALlB,CAAP;IAOD,CARa,CAAd;IASA/F,QAAQ,CAACT,SAAS,CAAC8F,KAAD,CAAV,CAAR;EACD,CAXD,CAlL8B,CA+L9B;;;EACA,MAAMW,UAAU,GAAG,OAAOC,eAAP,EAAkCpD,EAAlC,KAAiD;IAClE,IAAIqD,aAAa,GAAG;MAClBrE,IAAI,EAAEoE,eAAe,CAACpE,IADJ;MAElBF,KAAK,EAAEsE,eAAe,CAAC9D,MAFL;MAGlBgE,KAAK,EAAEF,eAAe,CAACtE,KAHL;MAIlBG,MAAM,EAAEmE,eAAe,CAACnE,MAJN;MAKlBC,MAAM,EAAEkE,eAAe,CAAClE,MALN;MAMlBC,QAAQ,EAAEiE,eAAe,CAACjE,QANR;MAOlBC,IAAI,EAAEgE,eAAe,CAAChE,IAPJ;MAQlB9B,KAAK,EAAE8F,eAAe,CAAC9F,KARL;MASlB+B,GAAG,EAAE+D,eAAe,CAAC/D,GATH;MAUlBtB,MAAM,EAAEiC;IAVU,CAApB;IAYA7C,QAAQ,CAACZ,cAAc,CAAC8G,aAAD,CAAf,CAAR;EACD,CAdD;;EAgBA,MAAME,aAAa,GAAG,MAAOlE,GAAP,IAAoB;IACxC,MAAM1C,eAAe,CAAC;MAAE6G,OAAO,EAAEnE;IAAX,CAAD,CAAf,CACHoE,IADG,CACGC,GAAD,IAAS;MACb,IAAIA,GAAG,KAAK,WAAZ,EAAyB;QACvBxG,QAAQ,CAAC,MAAD,CAAR;MACD,CAFD,MAEO;QACLtB,KAAK,CAAE,6BAA4ByD,GAAI,EAAlC,CAAL;MACD;IACF,CAPG,EAQHsE,KARG,CAQIlE,KAAD,IAAW;MAChBmE,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBpE,KAArB;MACA7D,KAAK,CAAC,sBAAD,CAAL;IACD,CAXG,CAAN;EAYD,CAbD;;EAeA,MAAMkI,cAAc,GAAG,OAAOV,eAAP,EAAkCpD,EAAlC,KAAiD;IACtE,MAAM+D,WAAW,GAAG;MAClBC,OAAO,EAAEZ,eADS;MAElBa,KAAK,EAAEb,eAAe,CAACpE,IAFL;MAGlBM,MAAM,EAAE8D,eAAe,CAACtE,KAHN;MAIlBf,MAAM,EAAEiC;IAJU,CAApB;IAMA/B,YAAY,CAACiG,OAAb,CAAqB,kBAArB,EAAyC/F,IAAI,CAACgG,SAAL,CAAeJ,WAAf,CAAzC;IACA5G,QAAQ,CAACb,mBAAmB,CAACyH,WAAD,CAApB,CAAR;IACA,MAAMR,aAAa,CAACH,eAAe,CAAC/D,GAAjB,CAAnB;IACA,MAAMiD,YAAY,CAACtC,EAAD,EAAKoD,eAAe,CAACtE,KAArB,CAAlB;IACA,MAAMqE,UAAU,CAACC,eAAD,EAAkBpD,EAAlB,CAAhB;EACD,CAZD;;EAcA,MAAMoE,kBAAkB,GAAG,OACzBC,QADyB,EAEzBC,QAFyB,EAGzBtE,EAHyB,EAIzBoD,eAJyB,KAKtB;IACH,MAAMxG,yBAAyB,CAAC;MAC9ByH,QAD8B;MAE9BC,QAF8B;MAG9BxF,KAAK,EAAEsE,eAAe,CAAC9D;IAHO,CAAD,CAAzB,CAKHmE,IALG,CAKE,MAAOC,GAAP,IAAe;MACnB9H,KAAK,CAAC2I,IAAN,CAAW,gDAAX;MACA,MAAMT,cAAc,CAACV,eAAD,EAAkBpD,EAAlB,CAApB;IACD,CARG,EASH2D,KATG,CASIlE,KAAD,IAAW;MAChBmE,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBpE,KAArB;MACA7D,KAAK,CAAC6D,KAAN,CAAY,yDAAZ;IACD,CAZG,CAAN;EAaD,CAnBD;;EAqBA,MAAM+E,YAAY,GAAG,MAAOpB,eAAP,IAAqC;IACxD,MAAMnB,WAAW,GAAG;MAClBwC,KAAK,EAAErB,eAAe,CAACpE,IADL;MAElBsE,KAAK,EAAEF,eAAe,CAACtE,KAFL;MAGlBQ,MAAM,EAAE8D,eAAe,CAAC9D,MAHN;MAIlBgF,QAAQ,EAAE;IAJQ,CAApB;IAMA,MAAMtI,YAAY,CAAC0I,qBAAb,CAAmCzC,WAAnC,EACHwB,IADG,CACE,MAAOC,GAAP,IAAoB;MACxB,IAAIA,GAAG,CAACiB,IAAR,EAAc;QACZ,MAAM3E,EAAE,GAAG0D,GAAG,CAACiB,IAAJ,CAASC,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAX;QACA,MAAMR,kBAAkB,CACtBnC,WAAW,CAACqB,KADU,EAEtBrB,WAAW,CAACqC,QAFU,EAGtBtE,EAHsB,EAItBoD,eAJsB,CAAxB;MAMD;IACF,CAXG,EAYHO,KAZG,CAYIlE,KAAD,IAAgB;MAAA;;MACrBmE,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBpE,KAAxB,aAAwBA,KAAxB,uBAAwBA,KAAK,CAAEoF,QAA/B;;MACA,IAAI,CAAApF,KAAK,SAAL,IAAAA,KAAK,WAAL,+BAAAA,KAAK,CAAEoF,QAAP,oEAAiBC,MAAjB,MAA4B,GAAhC,EAAqC;QACnClJ,KAAK,CAAC2I,IAAN,CAAW,kDAAX;QACA7D,UAAU,CAAC,MAAM;UACfxD,QAAQ,CAAC,aAAD,CAAR;QACD,CAFS,EAEP,IAFO,CAAV;MAGD,CALD,MAKO;QACLtB,KAAK,CAAC6D,KAAN,CAAY,6CAAZ;MACD;IACF,CAtBG,CAAN;EAuBD,CA9BD;;EAgCA,MAAMsF,oBAAoB,GAAG,YAAY;IACvC,MAAM3B,eAAe,GAAG5F,WAAW,CAAC6D,IAAZ,CACtB,CAACxC,IAAD,EAAiByC,KAAjB,KAAmCA,KAAK,KAAKjD,QADvB,CAAxB;IAGAzC,KAAK,CAAC2I,IAAN,CAAW,eAAX;;IACA,IAAInB,eAAJ,EAAqB;MACnB,IAAIhH,YAAJ,EAAkB;QAChB,MAAM0H,cAAc,CAACV,eAAD,EAAkBxF,MAAlB,CAApB;MACD,CAFD,MAEO;QACL,MAAM4G,YAAY,CAACpB,eAAD,CAAlB;MACD;IACF,CAND,MAMO;MACLxH,KAAK,CAAC2I,IAAN,CAAW,kBAAX;IACD;EACF,CAdD;;EAgBA,OAAO;IACL1E,aADK;IAELrC,WAFK;IAGLa,QAHK;IAILM,WAJK;IAKLmB,cALK;IAMLtB,cANK;IAOLE,gBAPK;IAQLpB,KARK;IASLmC,KATK;IAULE,OAVK;IAWLS,cAXK;IAYL4B,cAZK;IAaLE,WAbK;IAcLC,aAdK;IAeLC,cAfK;IAgBL2C,oBAhBK;IAiBL1C,WAjBK;IAkBL9E,gBAlBK;IAmBL2D,mBAnBK;IAoBLN,SApBK;IAqBLI,cArBK;IAsBLF;EAtBK,CAAP;AAwBD,CA1UM;;GAAM7D,U;UACMpB,W,EACAC,W,EACIkB,O,EAEGjB,W,EAGAA,W"},"metadata":{},"sourceType":"module"}