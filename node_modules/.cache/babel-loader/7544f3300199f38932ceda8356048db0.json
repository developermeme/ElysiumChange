{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { validatePassword } from \"../components/UserAccount/Script\";\nimport { ERROR404, ERROR500 } from \"../constant/routes\";\nimport { useValidationInfoContext } from \"../react-context/ValidationContext\";\nimport { UserServices as UserAPI } from \"../utils/API\";\nexport const usePwdReset = () => {\n  _s();\n\n  const initialState = {\n    password: \"\",\n    cpassword: \"\"\n  };\n  const [password, setpassword] = React.useState(initialState);\n  const [pwdError, setPwdError] = React.useState(\"\");\n  const {\n    handleBackToLogin\n  } = useValidationInfoContext();\n\n  const handlePasswordChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setpassword({ ...password,\n      [name]: value\n    });\n  };\n\n  React.useEffect(() => {\n    if (pwdError === \"\") {\n      return;\n    }\n\n    const timer = setTimeout(() => {\n      setPwdError(\"\");\n    }, 5000);\n    return () => clearTimeout(timer);\n  }, [pwdError]);\n\n  const handeValidate = () => {\n    let fields = password;\n    let formIsValid = true;\n    let passwordError = \"\";\n    const isValidpassword = validatePassword(fields.password);\n    const isValidConfirmpassword = validatePassword(fields.cpassword);\n\n    if (formIsValid && !isValidpassword.formIsValid) {\n      passwordError = isValidpassword.error;\n      formIsValid = false;\n    } else if (formIsValid && !isValidConfirmpassword.formIsValid) {\n      passwordError = isValidConfirmpassword.error;\n      formIsValid = false;\n    } else if (formIsValid && fields.password !== fields.cpassword) {\n      formIsValid = false;\n      passwordError = \"New passwords do not match.\";\n    } else {\n      passwordError = \"\";\n      formIsValid = true;\n    }\n\n    setPwdError(passwordError);\n    return formIsValid;\n  };\n\n  const emailID = localStorage.getItem(\"login-email\");\n  const user = {\n    email: emailID,\n    password: password.password\n  };\n\n  const handleUpdatePwdOnSubmit = e => {\n    e.preventDefault(); // dispatch(NotificationSlice.actions.resetNotifications());\n\n    if (handeValidate()) {\n      UserAPI.updatepwd(user).then(res => {\n        if (res.status === 200) {\n          localStorage.setItem(\"user-login\", user.email);\n          handleBackToLogin();\n        }\n      }).catch(error => {\n        if (error.response) {\n          switch (error.response.status) {\n            case 500:\n              {\n                window.location.href = ERROR500;\n                break;\n              }\n\n            case 404:\n              {\n                window.location.href = ERROR404;\n                break;\n              }\n\n            default:\n              window.location.href = ERROR500;\n          }\n        }\n      });\n    }\n  };\n\n  return {\n    handlePasswordChange,\n    handleUpdatePwdOnSubmit,\n    password,\n    pwdError\n  };\n};\n\n_s(usePwdReset, \"FxOaKEJkTyjJ7bAhXp2E4QrYdBw=\", false, function () {\n  return [useValidationInfoContext];\n});","map":{"version":3,"names":["React","validatePassword","ERROR404","ERROR500","useValidationInfoContext","UserServices","UserAPI","usePwdReset","initialState","password","cpassword","setpassword","useState","pwdError","setPwdError","handleBackToLogin","handlePasswordChange","e","name","target","value","useEffect","timer","setTimeout","clearTimeout","handeValidate","fields","formIsValid","passwordError","isValidpassword","isValidConfirmpassword","error","emailID","localStorage","getItem","user","email","handleUpdatePwdOnSubmit","preventDefault","updatepwd","then","res","status","setItem","catch","response","window","location","href"],"sources":["C:/Users/arunm/MeMeglobalsites/Elysium/New folder/ElysiumChange/src/hook/usePwdReset.hook.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { validatePassword } from \"../components/UserAccount/Script\";\r\nimport { ERROR404, ERROR500 } from \"../constant/routes\";\r\nimport { onChange, onClick } from \"../constant/Types\";\r\nimport { useValidationInfoContext } from \"../react-context/ValidationContext\";\r\nimport { UserServices as UserAPI } from \"../utils/API\";\r\n\r\nexport const usePwdReset = () => {\r\n  const initialState = {\r\n    password: \"\",\r\n    cpassword: \"\",\r\n  };\r\n\r\n  const [password, setpassword] = React.useState(initialState);\r\n\r\n  const [pwdError, setPwdError] = React.useState<string>(\"\");\r\n  const { handleBackToLogin } = useValidationInfoContext();\r\n\r\n  const handlePasswordChange = (e: onChange) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setpassword({ ...password, [name]: value });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (pwdError === \"\") {\r\n      return;\r\n    }\r\n    const timer = setTimeout(() => {\r\n      setPwdError(\"\");\r\n    }, 5000);\r\n    return () => clearTimeout(timer);\r\n  }, [pwdError]);\r\n\r\n  const handeValidate = () => {\r\n    let fields = password;\r\n    let formIsValid = true;\r\n    let passwordError = \"\";\r\n\r\n    const isValidpassword = validatePassword(fields.password);\r\n    const isValidConfirmpassword = validatePassword(fields.cpassword);\r\n\r\n    if (formIsValid && !isValidpassword.formIsValid) {\r\n      passwordError = isValidpassword.error;\r\n      formIsValid = false;\r\n    } else if (formIsValid && !isValidConfirmpassword.formIsValid) {\r\n      passwordError = isValidConfirmpassword.error;\r\n      formIsValid = false;\r\n    } else if (formIsValid && fields.password !== fields.cpassword) {\r\n      formIsValid = false;\r\n      passwordError = \"New passwords do not match.\";\r\n    } else {\r\n      passwordError = \"\";\r\n      formIsValid = true;\r\n    }\r\n\r\n    setPwdError(passwordError);\r\n\r\n    return formIsValid;\r\n  };\r\n\r\n  const emailID = localStorage.getItem(\"login-email\");\r\n\r\n  const user = {\r\n    email: emailID,\r\n    password: password.password,\r\n  };\r\n\r\n  const handleUpdatePwdOnSubmit = (e: onClick) => {\r\n    e.preventDefault();\r\n    // dispatch(NotificationSlice.actions.resetNotifications());\r\n    if (handeValidate()) {\r\n      UserAPI.updatepwd(user)\r\n        .then((res: any) => {\r\n          if (res.status === 200) {\r\n            localStorage.setItem(\"user-login\", user.email as string);\r\n            handleBackToLogin();\r\n          }\r\n        })\r\n        .catch((error: any) => {\r\n          if (error.response) {\r\n            switch (error.response.status) {\r\n              case 500: {\r\n                window.location.href = ERROR500;\r\n                break;\r\n              }\r\n              case 404: {\r\n                window.location.href = ERROR404;\r\n                break;\r\n              }\r\n              default:\r\n                window.location.href = ERROR500;\r\n            }\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return { handlePasswordChange, handleUpdatePwdOnSubmit, password, pwdError };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}