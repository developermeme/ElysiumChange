{"ast":null,"code":"import axios from \"axios\";\naxios.defaults.baseURL = \"https://api.mememall.tv:8443/ee/\";\naxios.defaults.headers = {\n  \"Content-Type\": \"application/json\"\n};\nexport const handleError = error => {\n  if (error.response) {\n    let displayMsg = null;\n\n    if (error.response.message) {\n      displayMsg = error.response.message;\n    } else if (error.response.data) {\n      if (error.response.data.message) {\n        displayMsg = error.response.data.message;\n      } else if (error.response.data.errors && error.response.data.errors[0]) {\n        displayMsg = error.response.data.errors[0].error;\n      } else if (error.response.data.error) {\n        displayMsg = error.response.data.error;\n      } else {\n        displayMsg = error.response.data;\n      }\n    } else if (error.response.statusText) {\n      displayMsg = error.response.statusText;\n    }\n\n    console.log(\"ERROR\", displayMsg);\n  } else if (error.request) {\n    // The request was made but no response was received\n    // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n    // http.ClientRequest in node.js\n    const errorMessage = error.request.status === 0 ? \"Please check your internet connection!\" : \"Something went wrong. Try again\";\n    console.log(\"ERROR\", errorMessage);\n  } else {\n    // Something happened in setting up the request that triggered an Error\n    console.log(\"Error\", error.message);\n  }\n\n  console.log(\"errorConfig\", error.config);\n};\n\nfunction GET(url) {\n  let paramsValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise((resolve, reject) => {\n    axios.get(url, {\n      params: paramsValue\n    }).then(response => resolve(response)).catch(function (error) {\n      handleError(error);\n      reject(error);\n    });\n  });\n}\n\n_c = GET;\n\nfunction POST(url) {\n  let paramsValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  let headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  return new Promise((resolve, reject) => {\n    axios.post(url, data, {\n      params: paramsValue\n    }).then(response => resolve(response)).catch(error => {\n      handleError(error);\n      reject(error);\n    });\n  });\n}\n\n_c2 = POST;\n\nconst getRequest = urls => {\n  let requests = urls.map(url => axios.get(url));\n  return requests;\n};\n\nfunction GETALL(urls) {\n  const promises = getRequest(urls);\n  return new Promise((resolve, resject) => {\n    axios.all(promises).then(axios.spread(function () {\n      for (var _len = arguments.length, responses = new Array(_len), _key = 0; _key < _len; _key++) {\n        responses[_key] = arguments[_key];\n      }\n\n      resolve(responses);\n    })).catch(axios.spread(function () {\n      for (var _len2 = arguments.length, errors = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        errors[_key2] = arguments[_key2];\n      }\n\n      resject(errors);\n    }));\n  });\n}\n\n_c3 = GETALL;\nexport { GET, POST, GETALL };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"GET\");\n$RefreshReg$(_c2, \"POST\");\n$RefreshReg$(_c3, \"GETALL\");","map":{"version":3,"names":["axios","defaults","baseURL","headers","handleError","error","response","displayMsg","message","data","errors","statusText","console","log","request","errorMessage","status","config","GET","url","paramsValue","Promise","resolve","reject","get","params","then","catch","POST","post","getRequest","urls","requests","map","GETALL","promises","resject","all","spread","responses"],"sources":["C:/Users/arunm/MeMeglobalsites/Elysium/New folder/ElysiumChange/src/utils/axios.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://api.mememall.tv:8443/ee/\";\r\n\r\n\r\naxios.defaults.headers = {\r\n  \"Content-Type\": \"application/json\",\r\n};\r\n\r\nexport const handleError = (error: any) => {\r\n  if (error.response) {\r\n    let displayMsg = null;\r\n    if (error.response.message) {\r\n      displayMsg = error.response.message;\r\n    } else if (error.response.data) {\r\n      if (error.response.data.message) {\r\n        displayMsg = error.response.data.message;\r\n      } else if (error.response.data.errors && error.response.data.errors[0]) {\r\n        displayMsg = error.response.data.errors[0].error;\r\n      } else if (error.response.data.error) {\r\n        displayMsg = error.response.data.error;\r\n      } else {\r\n        displayMsg = error.response.data;\r\n      }\r\n    } else if (error.response.statusText) {\r\n      displayMsg = error.response.statusText;\r\n    }\r\n    console.log(\"ERROR\", displayMsg);\r\n  } else if (error.request) {\r\n    // The request was made but no response was received\r\n    // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n    // http.ClientRequest in node.js\r\n\r\n    const errorMessage =\r\n      error.request.status === 0\r\n        ? \"Please check your internet connection!\"\r\n        : \"Something went wrong. Try again\";\r\n    console.log(\"ERROR\", errorMessage);\r\n  } else {\r\n    // Something happened in setting up the request that triggered an Error\r\n    console.log(\"Error\", error.message);\r\n  }\r\n  console.log(\"errorConfig\", error.config);\r\n};\r\n\r\nfunction GET(url: any, paramsValue = {}) {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(url, { params: paramsValue })\r\n      .then((response) => resolve(response))\r\n      .catch(function (error) {\r\n        handleError(error);\r\n        reject(error);\r\n      });\r\n  });\r\n}\r\n\r\nfunction POST(url: any, paramsValue = {}, data = null, headers = null) {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .post(url, data, { params: paramsValue })\r\n      .then((response) => resolve(response))\r\n      .catch((error) => {\r\n        handleError(error);\r\n        reject(error);\r\n      });\r\n  });\r\n}\r\n\r\nconst getRequest = (urls: any) => {\r\n  let requests = urls.map((url: string) => axios.get(url));\r\n  return requests;\r\n};\r\n\r\nfunction GETALL(urls: any[]) {\r\n  const promises = getRequest(urls);\r\n  return new Promise((resolve, resject) => {\r\n    axios\r\n      .all(promises)\r\n      .then(\r\n        axios.spread((...responses) => {\r\n          resolve(responses);\r\n        })\r\n      )\r\n      .catch(\r\n        axios.spread((...errors) => {\r\n          resject(errors);\r\n        })\r\n      );\r\n  });\r\n}\r\n\r\nexport { GET, POST, GETALL };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}