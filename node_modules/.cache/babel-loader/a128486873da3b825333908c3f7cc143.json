{"ast":null,"code":"export const Reducer = {\n  getAddressList: (state, action) => {\n    state.addressList = { ...action.payload\n    };\n  },\n  addNewAddress: (state, action) => {\n    state.addDeliveryAddress = action.payload;\n  },\n  updateAddress: (state, action) => {\n    state.addressList = { ...action.payload\n    };\n  },\n  deleteAddress: (state, action) => {\n    state.removeDeliveryAddress = action.payload;\n  },\n  SetEditedAddress: (state, action) => {\n    state.EditedAddress = action.payload;\n  },\n  SetSelecteddAddress: (state, action) => {\n    state.selectedAddress = action.payload;\n  }\n};","map":{"version":3,"names":["Reducer","getAddressList","state","action","addressList","payload","addNewAddress","addDeliveryAddress","updateAddress","deleteAddress","removeDeliveryAddress","SetEditedAddress","EditedAddress","SetSelecteddAddress","selectedAddress"],"sources":["C:/Users/arunm/MeMeglobalsites/Elysium/New folder/ElysiumChange/src/components/stateContainers/Address/Reducer.ts"],"sourcesContent":["import { PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { IAddAddress } from \"./Service\";\r\nimport { IAddressList, IInitialState, ISelectedAddress } from \"./Types\";\r\n\r\nexport const Reducer = {\r\n  getAddressList: (\r\n    state: IInitialState,\r\n    action: PayloadAction<IAddressList>\r\n  ): void => {\r\n    state.addressList = { ...action.payload };\r\n  },\r\n  addNewAddress: (\r\n    state: IInitialState,\r\n    action: PayloadAction<boolean>\r\n  ): void => {\r\n    state.addDeliveryAddress = action.payload;\r\n  },\r\n  updateAddress: (\r\n    state: IInitialState,\r\n    action: PayloadAction<IAddressList>\r\n  ): void => {\r\n    state.addressList = { ...action.payload };\r\n  },\r\n  deleteAddress: (\r\n    state: IInitialState,\r\n    action: PayloadAction<boolean>\r\n  ): void => {\r\n    state.removeDeliveryAddress = action.payload;\r\n  },\r\n  SetEditedAddress: (\r\n    state: IInitialState,\r\n    action: PayloadAction<IAddAddress>\r\n  ): void => {\r\n    state.EditedAddress = action.payload;\r\n  },\r\n  SetSelecteddAddress: (\r\n    state: IInitialState,\r\n    action: PayloadAction<ISelectedAddress>\r\n  ): void => {\r\n    state.selectedAddress = action.payload;\r\n  },\r\n};\r\n"],"mappings":"AAIA,OAAO,MAAMA,OAAO,GAAG;EACrBC,cAAc,EAAE,CACdC,KADc,EAEdC,MAFc,KAGL;IACTD,KAAK,CAACE,WAAN,GAAoB,EAAE,GAAGD,MAAM,CAACE;IAAZ,CAApB;EACD,CANoB;EAOrBC,aAAa,EAAE,CACbJ,KADa,EAEbC,MAFa,KAGJ;IACTD,KAAK,CAACK,kBAAN,GAA2BJ,MAAM,CAACE,OAAlC;EACD,CAZoB;EAarBG,aAAa,EAAE,CACbN,KADa,EAEbC,MAFa,KAGJ;IACTD,KAAK,CAACE,WAAN,GAAoB,EAAE,GAAGD,MAAM,CAACE;IAAZ,CAApB;EACD,CAlBoB;EAmBrBI,aAAa,EAAE,CACbP,KADa,EAEbC,MAFa,KAGJ;IACTD,KAAK,CAACQ,qBAAN,GAA8BP,MAAM,CAACE,OAArC;EACD,CAxBoB;EAyBrBM,gBAAgB,EAAE,CAChBT,KADgB,EAEhBC,MAFgB,KAGP;IACTD,KAAK,CAACU,aAAN,GAAsBT,MAAM,CAACE,OAA7B;EACD,CA9BoB;EA+BrBQ,mBAAmB,EAAE,CACnBX,KADmB,EAEnBC,MAFmB,KAGV;IACTD,KAAK,CAACY,eAAN,GAAwBX,MAAM,CAACE,OAA/B;EACD;AApCoB,CAAhB"},"metadata":{},"sourceType":"module"}