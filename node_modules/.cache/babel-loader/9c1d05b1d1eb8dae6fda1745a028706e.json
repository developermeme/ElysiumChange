{"ast":null,"code":"import { OrderServices } from \"../../../utils/API\";\nexport const placeOrderService = async item => {\n  return OrderServices.placeOrder(item).then(res => res.status).catch(error => error);\n};\nexport const getOrderService = async item => {\n  return OrderServices.getOrderByUserId(item).then(res => res.data).catch(error => error);\n};","map":{"version":3,"names":["OrderServices","placeOrderService","item","placeOrder","then","res","status","catch","error","getOrderService","getOrderByUserId","data"],"sources":["C:/Users/arunm/MeMeglobalsites/Elysium/New folder/ElysiumChange/src/components/stateContainers/Order/Service.ts"],"sourcesContent":["import { OrderServices } from \"../../../utils/API\";\r\nimport { IPlaceOrder } from \"./Types\";\r\n\r\nexport const placeOrderService = async (item: IPlaceOrder): Promise<any> => {\r\n  return OrderServices.placeOrder(item)\r\n    .then((res: any) => res.status)\r\n    .catch((error: any) => error);\r\n};\r\n\r\nexport const getOrderService = async (item: any): Promise<any> => {\r\n  return OrderServices.getOrderByUserId(item)\r\n    .then((res: any) => res.data)\r\n    .catch((error: any) => error);\r\n};\r\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AAGA,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,IAAP,IAA2C;EAC1E,OAAOF,aAAa,CAACG,UAAd,CAAyBD,IAAzB,EACJE,IADI,CACEC,GAAD,IAAcA,GAAG,CAACC,MADnB,EAEJC,KAFI,CAEGC,KAAD,IAAgBA,KAFlB,CAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,eAAe,GAAG,MAAOP,IAAP,IAAmC;EAChE,OAAOF,aAAa,CAACU,gBAAd,CAA+BR,IAA/B,EACJE,IADI,CACEC,GAAD,IAAcA,GAAG,CAACM,IADnB,EAEJJ,KAFI,CAEGC,KAAD,IAAgBA,KAFlB,CAAP;AAGD,CAJM"},"metadata":{},"sourceType":"module"}