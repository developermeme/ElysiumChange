{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { validateEmailId, validateMobileNumber, validateName, validatePassword } from \"../components/UserAccount/Script\";\nimport { ERROR404, ERROR500 } from \"../constant/routes\";\nimport { UserServices } from \"../utils/API\";\nimport { Countries } from \"../components/common/json/Countries\";\nimport { handleErrorResponse } from \"../components/common/Script\";\nexport const useRegister = () => {\n  _s();\n\n  const initialRegisterCredentials = {\n    uPhone: \"\",\n    fname: \"\",\n    lname: \"\",\n    email: \"\",\n    password: \"\",\n    userReferral: \"\"\n  };\n  const [registerCredentials, setRegisterCredentials] = React.useState(initialRegisterCredentials);\n  const [errors, setErrors] = React.useState(\"\");\n  const [successMsg, setSuccessMsg] = React.useState(\"\");\n  const [isregistered, setIsRegistered] = React.useState(false);\n\n  const handleOnChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setRegisterCredentials({ ...registerCredentials,\n      [name]: value\n    });\n  };\n\n  const onFocusEvent = () => {\n    setErrors(\"\");\n  };\n\n  React.useEffect(() => {\n    if (errors === \"\") {\n      return;\n    }\n\n    const timer = setTimeout(() => {\n      setErrors(\"\");\n    }, 5000);\n    return () => clearTimeout(timer);\n  }, [errors]);\n  const countries = Countries.map(item => {\n    return item.name;\n  });\n  const [selectedCountry, setSelectedCountry] = React.useState(\"\");\n  const [selectedRegion, setSelectedRegion] = React.useState(\"\");\n\n  const handleCountrySelect = e => {\n    e.preventDefault();\n    setSelectedCountry(e.target.value);\n  };\n\n  React.useEffect(() => {\n    const regionList = Countries.find((item, index) => item.name === selectedCountry);\n    setSelectedRegion(regionList === null || regionList === void 0 ? void 0 : regionList.dialCode);\n  }, [selectedCountry]);\n\n  const validate = () => {\n    let fields = registerCredentials;\n    let errors = \"\";\n    let formIsValid = true;\n    const isValidFirstName = validateName(fields.fname, \"fname\");\n    const isValidLastName = validateName(fields.lname, \"lname\");\n    const isValidEmailId = validateEmailId(fields.email);\n    const isValidMobileNumber = validateMobileNumber(fields.uPhone);\n    const isValidPassword = validatePassword(fields.password);\n\n    if (formIsValid && !isValidFirstName.formIsValid) {\n      errors = isValidFirstName.error;\n      formIsValid = false;\n    } else if (formIsValid && !isValidLastName.formIsValid) {\n      errors = isValidLastName.error;\n      formIsValid = false;\n    } else if (formIsValid && !isValidEmailId.formIsValid) {\n      errors = isValidEmailId.error;\n      formIsValid = false;\n    } else if (formIsValid && !isValidMobileNumber.formIsValid) {\n      errors = isValidMobileNumber.error;\n      formIsValid = false;\n    } else if (formIsValid && !isValidPassword.formIsValid) {\n      formIsValid = false;\n      errors = isValidPassword.error;\n    } else if (formIsValid && selectedRegion === undefined) {\n      formIsValid = false;\n      errors = \"Please select your country\";\n    } else {\n      errors = \"\";\n      formIsValid = true;\n    }\n\n    setErrors(errors);\n    return formIsValid;\n  };\n\n  const email = {\n    email: localStorage.getItem(\"remail\")\n  };\n\n  const ResendRegisterOTP = () => {\n    UserServices.forgotpwd(email).then(res => {\n      if (res.status === 200) {\n        console.log(\"res\", res);\n        setIsRegistered(true);\n      }\n    }).catch(error => {\n      setErrors(\"User Not Available\");\n      handleErrorResponse(error);\n    });\n  };\n\n  const registerOnSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      let credentials = { ...registerCredentials\n      };\n      credentials.uPhone = selectedRegion + credentials.uPhone;\n      UserServices.register(credentials).then(res => {\n        if (res.status === 201) {\n          localStorage.setItem(\"remail\", registerCredentials.email);\n          setSuccessMsg(\"OTP sent to your registered mobile number\");\n          ResendRegisterOTP();\n        }\n      }).catch(error => {\n        console.log(\"Error - \", error);\n\n        if (error.response) {\n          switch (error.response.status) {\n            case 409:\n              {\n                setErrors(\"Registered already!\");\n                break;\n              }\n\n            case 500:\n              {\n                window.location.href = ERROR500;\n                break;\n              }\n\n            case 404:\n              {\n                window.location.href = ERROR404;\n                break;\n              }\n\n            default:\n              window.location.href = ERROR500;\n          }\n        }\n      });\n    }\n  };\n\n  return {\n    registerCredentials,\n    errors,\n    handleOnChange,\n    onFocusEvent,\n    registerOnSubmit,\n    setErrors,\n    successMsg,\n    selectedCountry,\n    handleCountrySelect,\n    countries,\n    selectedRegion,\n    isregistered,\n    ResendRegisterOTP,\n    setIsRegistered\n  };\n};\n\n_s(useRegister, \"0c6HQ9KC542ge50UQ35J7BYikfQ=\");","map":{"version":3,"names":["React","validateEmailId","validateMobileNumber","validateName","validatePassword","ERROR404","ERROR500","UserServices","Countries","handleErrorResponse","useRegister","initialRegisterCredentials","uPhone","fname","lname","email","password","userReferral","registerCredentials","setRegisterCredentials","useState","errors","setErrors","successMsg","setSuccessMsg","isregistered","setIsRegistered","handleOnChange","e","name","target","value","onFocusEvent","useEffect","timer","setTimeout","clearTimeout","countries","map","item","selectedCountry","setSelectedCountry","selectedRegion","setSelectedRegion","handleCountrySelect","preventDefault","regionList","find","index","dialCode","validate","fields","formIsValid","isValidFirstName","isValidLastName","isValidEmailId","isValidMobileNumber","isValidPassword","error","undefined","localStorage","getItem","ResendRegisterOTP","forgotpwd","then","res","status","console","log","catch","registerOnSubmit","credentials","register","setItem","response","window","location","href"],"sources":["C:/Users/arunm/MeMeglobalsites/Elysium/New folder/ElysiumChange/src/hook/useRegister.hook.ts"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  validateEmailId,\r\n  validateMobileNumber,\r\n  validateName,\r\n  validatePassword,\r\n} from \"../components/UserAccount/Script\";\r\nimport { ERROR404, ERROR500 } from \"../constant/routes\";\r\nimport { onChange, onClick, registerUser } from \"../constant/Types\";\r\nimport { UserServices } from \"../utils/API\";\r\nimport { Countries } from \"../components/common/json/Countries\";\r\nimport { handleErrorResponse } from \"../components/common/Script\";\r\n\r\nexport const useRegister = () => {\r\n  const initialRegisterCredentials: registerUser = {\r\n    uPhone: \"\",\r\n    fname: \"\",\r\n    lname: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    userReferral: \"\",\r\n  };\r\n\r\n  const [registerCredentials, setRegisterCredentials] =\r\n    React.useState<registerUser>(initialRegisterCredentials);\r\n  const [errors, setErrors] = React.useState<string>(\"\");\r\n  const [successMsg, setSuccessMsg] = React.useState(\"\");\r\n\r\n  const [isregistered, setIsRegistered] = React.useState(false);\r\n\r\n  const handleOnChange = (e: onChange) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setRegisterCredentials({ ...registerCredentials, [name]: value });\r\n  };\r\n\r\n  const onFocusEvent = () => {\r\n    setErrors(\"\");\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (errors === \"\") {\r\n      return;\r\n    }\r\n    const timer = setTimeout(() => {\r\n      setErrors(\"\");\r\n    }, 5000);\r\n    return () => clearTimeout(timer);\r\n  }, [errors]);\r\n\r\n  const countries = Countries.map((item: any) => {\r\n    return item.name;\r\n  });\r\n\r\n  const [selectedCountry, setSelectedCountry] = React.useState(\"\");\r\n  const [selectedRegion, setSelectedRegion] = React.useState<\r\n    string | undefined\r\n  >(\"\");\r\n\r\n  const handleCountrySelect = (e: any) => {\r\n    e.preventDefault();\r\n    setSelectedCountry(e.target.value);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const regionList = Countries.find(\r\n      (item: any, index) => item.name === selectedCountry\r\n    );\r\n    setSelectedRegion(regionList?.dialCode);\r\n  }, [selectedCountry]);\r\n\r\n  const validate = () => {\r\n    let fields = registerCredentials;\r\n    let errors = \"\";\r\n    let formIsValid = true;\r\n\r\n    const isValidFirstName = validateName(fields.fname, \"fname\");\r\n    const isValidLastName = validateName(fields.lname, \"lname\");\r\n    const isValidEmailId = validateEmailId(fields.email);\r\n    const isValidMobileNumber = validateMobileNumber(fields.uPhone);\r\n    const isValidPassword = validatePassword(fields.password);\r\n\r\n    if (formIsValid && !isValidFirstName.formIsValid) {\r\n      errors = isValidFirstName.error;\r\n      formIsValid = false;\r\n    } else if (formIsValid && !isValidLastName.formIsValid) {\r\n      errors = isValidLastName.error;\r\n      formIsValid = false;\r\n    } else if (formIsValid && !isValidEmailId.formIsValid) {\r\n      errors = isValidEmailId.error;\r\n      formIsValid = false;\r\n    } else if (formIsValid && !isValidMobileNumber.formIsValid) {\r\n      errors = isValidMobileNumber.error;\r\n      formIsValid = false;\r\n    } else if (formIsValid && !isValidPassword.formIsValid) {\r\n      formIsValid = false;\r\n      errors = isValidPassword.error;\r\n    } else if (formIsValid && selectedRegion === undefined) {\r\n      formIsValid = false;\r\n      errors = \"Please select your country\";\r\n    } else {\r\n      errors = \"\";\r\n      formIsValid = true;\r\n    }\r\n    setErrors(errors);\r\n    return formIsValid;\r\n  };\r\n\r\n  const email = { email: localStorage.getItem(\"remail\") };\r\n\r\n  const ResendRegisterOTP = () => {\r\n    UserServices.forgotpwd(email)\r\n      .then((res: any) => {\r\n        if (res.status === 200) {\r\n          console.log(\"res\", res);\r\n          setIsRegistered(true);\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        setErrors(\"User Not Available\");\r\n        handleErrorResponse(error);\r\n      });\r\n  };\r\n\r\n  const registerOnSubmit = (e: onClick) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      let credentials = { ...registerCredentials };\r\n      credentials.uPhone = selectedRegion + credentials.uPhone;\r\n      UserServices.register(credentials)\r\n        .then((res: any) => {\r\n          if (res.status === 201) {\r\n            localStorage.setItem(\"remail\", registerCredentials.email);\r\n            setSuccessMsg(\"OTP sent to your registered mobile number\");\r\n            ResendRegisterOTP();\r\n          }\r\n        })\r\n        .catch((error: any) => {\r\n          console.log(\"Error - \", error);\r\n          if (error.response) {\r\n            switch (error.response.status) {\r\n              case 409: {\r\n                setErrors(\"Registered already!\");\r\n                break;\r\n              }\r\n              case 500: {\r\n                window.location.href = ERROR500;\r\n                break;\r\n              }\r\n              case 404: {\r\n                window.location.href = ERROR404;\r\n                break;\r\n              }\r\n              default:\r\n                window.location.href = ERROR500;\r\n            }\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return {\r\n    registerCredentials,\r\n    errors,\r\n    handleOnChange,\r\n    onFocusEvent,\r\n    registerOnSubmit,\r\n    setErrors,\r\n    successMsg,\r\n    selectedCountry,\r\n    handleCountrySelect,\r\n    countries,\r\n    selectedRegion,\r\n    isregistered,\r\n    ResendRegisterOTP,\r\n    setIsRegistered,\r\n  };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}