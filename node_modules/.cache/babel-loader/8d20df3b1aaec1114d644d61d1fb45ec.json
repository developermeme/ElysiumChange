{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ERROR404, ERROR500 } from \"../constant/routes\";\nimport { useValidationInfoContext } from \"../react-context/ValidationContext\";\nimport { UserServices as UserAPI } from \"../utils/API\";\nexport const useOTPVerification = () => {\n  _s();\n\n  const initialState = {\n    OTP: \"\"\n  };\n  const navigate = useNavigate();\n  const [OTP, setOTP] = React.useState(initialState);\n  const [OTPError, setOTPError] = React.useState(\"\");\n  const [otpSuccessMsg, setOtpSuccessMsg] = React.useState(\"\");\n  const {\n    handleOTPSubmit\n  } = useValidationInfoContext();\n\n  const getOTPValue = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setOTP({ ...OTP,\n      [name]: value\n    });\n  };\n\n  React.useEffect(() => {\n    if (OTPError === \"\") {\n      return;\n    }\n\n    const timer = setTimeout(() => {\n      setOTPError(\"\");\n    }, 5000);\n    return () => clearTimeout(timer);\n  }, [OTPError]);\n\n  const handeValidate = () => {\n    let fields = OTP;\n    let formIsValid = true;\n    let otpError = \"\";\n\n    if (!fields.OTP) {\n      formIsValid = false;\n      otpError = \"Please enter an OTP.\";\n    }\n\n    if (fields.OTP.length !== 4) {\n      formIsValid = false;\n      otpError = \"Invalid OTP, Please try again.\";\n    }\n\n    setOTPError(otpError);\n    return formIsValid;\n  };\n\n  const token = {\n    token: OTP.OTP\n  };\n  const remail = localStorage.getItem(\"remail\");\n\n  const handleOnSubmitOTP = (e, from) => {\n    e.preventDefault();\n\n    if (handeValidate()) {\n      UserAPI.confimation(token).then(res => {\n        console.log(res);\n\n        if (res.status === 202) {\n          if (from === \"reg\") {\n            setOtpSuccessMsg(\"Registered successfully!\");\n            localStorage.setItem(\"user-login\", remail);\n            setTimeout(() => {\n              navigate(\"/\");\n              window.location.reload();\n            }, 1000);\n          } else {\n            handleOTPSubmit();\n          }\n        }\n      }).catch(error => {\n        if (error.response) {\n          switch (error.response.status) {\n            case 409:\n              {\n                setOTPError(\"Invalid OTP\");\n                break;\n              }\n\n            case 500:\n              {\n                window.location.href = ERROR500;\n                break;\n              }\n\n            case 404:\n              {\n                window.location.href = ERROR404;\n                break;\n              }\n\n            default:\n              window.location.href = ERROR500;\n          }\n        }\n      });\n    }\n  };\n\n  return {\n    OTP,\n    getOTPValue,\n    handleOnSubmitOTP,\n    OTPError,\n    otpSuccessMsg\n  };\n};\n\n_s(useOTPVerification, \"9aIClFgXqxhK05hL8iRRD7FBWTk=\", false, function () {\n  return [useNavigate, useValidationInfoContext];\n});","map":{"version":3,"names":["React","useNavigate","ERROR404","ERROR500","useValidationInfoContext","UserServices","UserAPI","useOTPVerification","initialState","OTP","navigate","setOTP","useState","OTPError","setOTPError","otpSuccessMsg","setOtpSuccessMsg","handleOTPSubmit","getOTPValue","e","name","target","value","useEffect","timer","setTimeout","clearTimeout","handeValidate","fields","formIsValid","otpError","length","token","remail","localStorage","getItem","handleOnSubmitOTP","from","preventDefault","confimation","then","res","console","log","status","setItem","window","location","reload","catch","error","response","href"],"sources":["C:/Users/arunm/MeMeglobalsites/Elysium/New folder/ElysiumChange/src/hook/useOTPVerification.hook.ts"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ERROR404, ERROR500 } from \"../constant/routes\";\r\nimport { onChange, onClick, OTP } from \"../constant/Types\";\r\nimport { useValidationInfoContext } from \"../react-context/ValidationContext\";\r\nimport { UserServices as UserAPI } from \"../utils/API\";\r\n\r\nexport const useOTPVerification = () => {\r\n  const initialState: OTP = {\r\n    OTP: \"\",\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  const [OTP, setOTP] = React.useState<OTP>(initialState);\r\n  const [OTPError, setOTPError] = React.useState<string>(\"\");\r\n  const [otpSuccessMsg, setOtpSuccessMsg] = React.useState(\"\");\r\n\r\n  const { handleOTPSubmit } = useValidationInfoContext();\r\n\r\n  const getOTPValue = (e: onChange) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setOTP({ ...OTP, [name]: value });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (OTPError === \"\") {\r\n      return;\r\n    }\r\n    const timer = setTimeout(() => {\r\n      setOTPError(\"\");\r\n    }, 5000);\r\n    return () => clearTimeout(timer);\r\n  }, [OTPError]);\r\n\r\n  const handeValidate = () => {\r\n    let fields = OTP;\r\n    let formIsValid = true;\r\n    let otpError = \"\";\r\n\r\n    if (!fields.OTP) {\r\n      formIsValid = false;\r\n      otpError = \"Please enter an OTP.\";\r\n    }\r\n\r\n    if (fields.OTP.length !== 4) {\r\n      formIsValid = false;\r\n      otpError = \"Invalid OTP, Please try again.\";\r\n    }\r\n    setOTPError(otpError);\r\n    return formIsValid;\r\n  };\r\n\r\n  const token = { token: OTP.OTP };\r\n\r\n  const remail = localStorage.getItem(\"remail\") as string;\r\n  const handleOnSubmitOTP = (e: onClick, from: string) => {\r\n    e.preventDefault();\r\n\r\n    if (handeValidate()) {\r\n      UserAPI.confimation(token)\r\n        .then((res: any) => {\r\n          console.log(res);\r\n          if (res.status === 202) {\r\n            if (from === \"reg\") {\r\n              setOtpSuccessMsg(\"Registered successfully!\");\r\n              localStorage.setItem(\"user-login\", remail);\r\n              setTimeout(() => {\r\n                navigate(\"/\");\r\n                window.location.reload();\r\n              }, 1000);\r\n            } else {\r\n              handleOTPSubmit();\r\n            }\r\n          }\r\n        })\r\n        .catch((error: any) => {\r\n          if (error.response) {\r\n            switch (error.response.status) {\r\n              case 409: {\r\n                setOTPError(\"Invalid OTP\");\r\n                break;\r\n              }\r\n              case 500: {\r\n                window.location.href = ERROR500;\r\n                break;\r\n              }\r\n              case 404: {\r\n                window.location.href = ERROR404;\r\n                break;\r\n              }\r\n              default:\r\n                window.location.href = ERROR500;\r\n            }\r\n          }\r\n        });\r\n    }\r\n  };\r\n  return { OTP, getOTPValue, handleOnSubmitOTP, OTPError, otpSuccessMsg };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}